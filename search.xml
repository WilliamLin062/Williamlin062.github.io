<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo GitPage初次使用</title>
    <url>/2020/09/15/2020-09-15/</url>
    <content><![CDATA[<h5 id="前幾天發現了hexo這個套件剛好最近想要做一個完整點的部落格就索性直接用了，省了不少時間精力目前用起來的感覺不錯，豐富的主題大部分需要的功能都有而且最重要的是可以部屬到github上面這超重要-來寫一下使用方法"><a href="#前幾天發現了hexo這個套件剛好最近想要做一個完整點的部落格就索性直接用了，省了不少時間精力目前用起來的感覺不錯，豐富的主題大部分需要的功能都有而且最重要的是可以部屬到github上面這超重要-來寫一下使用方法" class="headerlink" title="前幾天發現了hexo這個套件剛好最近想要做一個完整點的部落格就索性直接用了，省了不少時間精力目前用起來的感覺不錯，豐富的主題大部分需要的功能都有而且最重要的是可以部屬到github上面這超重要! 來寫一下使用方法"></a>前幾天發現了hexo這個套件剛好最近想要做一個完整點的部落格就索性直接用了，省了不少時間精力目前用起來的感覺不錯，豐富的主題大部分需要的功能都有</p>而且最重要的是可以部屬到github上面這超重要! 來寫一下使用方法</h5><h1 id="NPM-Git"><a href="#NPM-Git" class="headerlink" title="NPM Git"></a>NPM Git</h1><h6 id="首先要先有-npm-還有-Git，-npm-是-node-js-附帶的套件管理器沒有的話要先去-node-js-官網安裝-，Git-是版本控制系統-Hexo-會用-git-指令去抓初始化檔案-，都有了就可以執行下一步了"><a href="#首先要先有-npm-還有-Git，-npm-是-node-js-附帶的套件管理器沒有的話要先去-node-js-官網安裝-，Git-是版本控制系統-Hexo-會用-git-指令去抓初始化檔案-，都有了就可以執行下一步了" class="headerlink" title="首先要先有 npm 還有 Git， npm 是 node.js 附帶的套件管理器沒有的話要先去 node.js 官網安裝 ，Git 是版本控制系統 Hexo 會用 git 指令去抓初始化檔案 ，都有了就可以執行下一步了!"></a>首先要先有 npm 還有 Git， npm 是 node.js 附帶的套件管理器沒有的話要先去 node.js 官網安裝 ，Git 是版本控制系統 Hexo 會用 git 指令去抓初始化檔案 ，都有了就可以執行下一步了!</h6><h6 id="Git-https-gitforwindows-org"><a href="#Git-https-gitforwindows-org" class="headerlink" title="Git: https://gitforwindows.org/"></a>Git: <a href="https://">https://gitforwindows.org/</a></h6><h1 id="安裝-HEXO"><a href="#安裝-HEXO" class="headerlink" title="安裝 HEXO"></a>安裝 HEXO</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h1 id="初始化-HEXO-資料夾"><a href="#初始化-HEXO-資料夾" class="headerlink" title="初始化 HEXO 資料夾"></a>初始化 HEXO 資料夾</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">init</span> &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h6 id="做完之後資料夾會長這樣，-config-yml-負責設定詳細可以到官網看文件，-config-yml-除了在最外層有一個-主題資料夾也會有一個，主題內的是設定主題相關的東西各個主題都不同要看一下-readme-md-的說明"><a href="#做完之後資料夾會長這樣，-config-yml-負責設定詳細可以到官網看文件，-config-yml-除了在最外層有一個-主題資料夾也會有一個，主題內的是設定主題相關的東西各個主題都不同要看一下-readme-md-的說明" class="headerlink" title="做完之後資料夾會長這樣，_config.yml 負責設定詳細可以到官網看文件，_config.yml 除了在最外層有一個 主題資料夾也會有一個，主題內的是設定主題相關的東西各個主題都不同要看一下 readme md 的說明"></a>做完之後資料夾會長這樣，_config.yml 負責設定詳細可以到官網看文件，_config.yml 除了在最外層有一個 主題資料夾也會有一個，主題內的是設定主題相關的東西各個主題都不同要看一下 readme md 的說明</h6><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p>再來是推薦一下好用的 vs code 擴充 vscode-md</p>
<p>不熟悉 markdown 語法可以裝裝看 因為大部分文章格式都是用 markdown，有了這個就不用再查語法</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>GitPage</tag>
      </tags>
  </entry>
  <entry>
    <title>2023當兵心得-東引篇</title>
    <url>/2023/04/22/2023%E7%95%B6%E5%85%B5%E5%BF%83%E5%BE%97-%E6%9D%B1%E5%BC%95%E7%AF%87/</url>
    <content><![CDATA[<h4 id="今年1-x2F-12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考"><a href="#今年1-x2F-12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考" class="headerlink" title="今年1&#x2F;12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考"></a>今年1&#x2F;12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考</h4><h4 id="此篇為第二階段東引地區指揮部，記錄下來分享給自願或不願意即將前往外島的弟兄"><a href="#此篇為第二階段東引地區指揮部，記錄下來分享給自願或不願意即將前往外島的弟兄" class="headerlink" title="此篇為第二階段東引地區指揮部，記錄下來分享給自願或不願意即將前往外島的弟兄"></a>此篇為第二階段東引地區指揮部，記錄下來分享給自願或不願意即將前往外島的弟兄</h4><hr>
<h3 id="第二階段-東引地須指揮部步兵連"><a href="#第二階段-東引地須指揮部步兵連" class="headerlink" title="第二階段-東引地須指揮部步兵連"></a>第二階段-東引地須指揮部步兵連</h3><h4 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h4><p>寢室：(核心營區)分123寢，一寢比較大人數會比較多，166梯38人1寢就睡了20幾個士官寢也在一寢還有一個大的雜物區，二寢四張四人上下舖床，三寢沒睡到原本是曬衣間後來便隔離間<br>浴廁：(核心營區)好到不能再好了，除了水壓人多會太低洗澡不好洗大多沒甚麼好挑剔的<br>食物：慘到不能再慘一餐二至四道菜，不好吃就算了還分量稀少沒得加菜</p>
<h4 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h4><blockquote>
<p>物資匱乏(到4月初前連網路都沒有)</p>
</blockquote>
<h5 id="東引指揮部下面有很多連，機步、保修、一連、二連、步兵連等等，步兵連為主要新兵待的單位還是會有一些人分到如保修、二連等"><a href="#東引指揮部下面有很多連，機步、保修、一連、二連、步兵連等等，步兵連為主要新兵待的單位還是會有一些人分到如保修、二連等" class="headerlink" title="東引指揮部下面有很多連，機步、保修、一連、二連、步兵連等等，步兵連為主要新兵待的單位還是會有一些人分到如保修、二連等"></a>東引指揮部下面有很多連，機步、保修、一連、二連、步兵連等等，步兵連為主要新兵待的單位還是會有一些人分到如保修、二連等</h5><h5 id="單純比爽度的話步兵連跟保修連二連的弟兄相比絕對不爽，166t唯一有在上課的就是步兵連更不用說伙食最爛"><a href="#單純比爽度的話步兵連跟保修連二連的弟兄相比絕對不爽，166t唯一有在上課的就是步兵連更不用說伙食最爛" class="headerlink" title="單純比爽度的話步兵連跟保修連二連的弟兄相比絕對不爽，166t唯一有在上課的就是步兵連更不用說伙食最爛"></a>單純比爽度的話步兵連跟保修連二連的弟兄相比絕對不爽，166t唯一有在上課的就是步兵連更不用說伙食最爛</h5><h5 id="跟前面時間比起來步兵連的一天舒服很多整體休息時間長很多，該做的做好什麼時候做甚麼事在這過的就會不錯-如果能接受沒網路的話-但是跟其他連比是沒得比的步兵連該操課要操課新訓做過的這邊還是要來一次不同的地方是65k2變成了t91。目前步兵連的生活地區分兩邊核心營區及圓圓澳，操課大部分都在圓圓澳吃飯睡覺則是在核心營區兩者之間有段距離而且地形起伏有點多走起來有點小累習慣後就還好了，在外島一個禮拜只有一天休假需要注意一下就是了"><a href="#跟前面時間比起來步兵連的一天舒服很多整體休息時間長很多，該做的做好什麼時候做甚麼事在這過的就會不錯-如果能接受沒網路的話-但是跟其他連比是沒得比的步兵連該操課要操課新訓做過的這邊還是要來一次不同的地方是65k2變成了t91。目前步兵連的生活地區分兩邊核心營區及圓圓澳，操課大部分都在圓圓澳吃飯睡覺則是在核心營區兩者之間有段距離而且地形起伏有點多走起來有點小累習慣後就還好了，在外島一個禮拜只有一天休假需要注意一下就是了" class="headerlink" title="跟前面時間比起來步兵連的一天舒服很多整體休息時間長很多，該做的做好什麼時候做甚麼事在這過的就會不錯(如果能接受沒網路的話)但是跟其他連比是沒得比的步兵連該操課要操課新訓做過的這邊還是要來一次不同的地方是65k2變成了t91。目前步兵連的生活地區分兩邊核心營區及圓圓澳，操課大部分都在圓圓澳吃飯睡覺則是在核心營區兩者之間有段距離而且地形起伏有點多走起來有點小累習慣後就還好了，在外島一個禮拜只有一天休假需要注意一下就是了"></a>跟前面時間比起來步兵連的一天舒服很多整體休息時間長很多，該做的做好什麼時候做甚麼事在這過的就會不錯(如果能接受沒網路的話)但是跟其他連比是沒得比的步兵連該操課要操課新訓做過的這邊還是要來一次不同的地方是65k2變成了t91。目前步兵連的生活地區分兩邊核心營區及圓圓澳，操課大部分都在圓圓澳吃飯睡覺則是在核心營區兩者之間有段距離而且地形起伏有點多走起來有點小累習慣後就還好了，在外島一個禮拜只有一天休假需要注意一下就是了</h5><h5 id="除了這些還有這邊需要站哨-大部分時候是夜哨-，站哨前還需要考試"><a href="#除了這些還有這邊需要站哨-大部分時候是夜哨-，站哨前還需要考試" class="headerlink" title="除了這些還有這邊需要站哨(大部分時候是夜哨)，站哨前還需要考試"></a>除了這些還有這邊需要站哨(大部分時候是夜哨)，站哨前還需要考試</h5><blockquote>
<p>站哨要幹嘛?看海阿看天空阿，不得不說風景很好風很涼</p>
</blockquote>
<h4 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h4><blockquote>
<p>當兵好花錢阿</p>
</blockquote>
<h5 id="踏上東引看到核心營區第一個反應就是這甚麼破地方，山丘下一棟單層小破迷彩鐵皮營舍浴室廁所還在外面整個充滿陽春感跟新訓還有韋昌嶺的環境截然不同，一瞬間有點後悔為甚麼要選東引但是習慣之後就覺得其實還不錯，連上幹部人都很好相處起來都不錯生活有說有笑士官長更是陪伴了我們大部分時間，在島上當兵的日子每天都會發生一些有趣的事情也因為大家朝夕相處假日也是一起在島上不管好的壞的也都是大家一起經歷跟連上弟兄感情上會比在新訓好上許多。東引地區又分東引島跟西引島，東引地形有點像是在山上起伏很大雖然真的很小東引走直線橫穿經過村里到另一側只要十分鐘，島上主要生活地區在東引島樂華村飲料店網咖民宿吃的喝的都在這裡"><a href="#踏上東引看到核心營區第一個反應就是這甚麼破地方，山丘下一棟單層小破迷彩鐵皮營舍浴室廁所還在外面整個充滿陽春感跟新訓還有韋昌嶺的環境截然不同，一瞬間有點後悔為甚麼要選東引但是習慣之後就覺得其實還不錯，連上幹部人都很好相處起來都不錯生活有說有笑士官長更是陪伴了我們大部分時間，在島上當兵的日子每天都會發生一些有趣的事情也因為大家朝夕相處假日也是一起在島上不管好的壞的也都是大家一起經歷跟連上弟兄感情上會比在新訓好上許多。東引地區又分東引島跟西引島，東引地形有點像是在山上起伏很大雖然真的很小東引走直線橫穿經過村里到另一側只要十分鐘，島上主要生活地區在東引島樂華村飲料店網咖民宿吃的喝的都在這裡" class="headerlink" title="踏上東引看到核心營區第一個反應就是這甚麼破地方，山丘下一棟單層小破迷彩鐵皮營舍浴室廁所還在外面整個充滿陽春感跟新訓還有韋昌嶺的環境截然不同，一瞬間有點後悔為甚麼要選東引但是習慣之後就覺得其實還不錯，連上幹部人都很好相處起來都不錯生活有說有笑士官長更是陪伴了我們大部分時間，在島上當兵的日子每天都會發生一些有趣的事情也因為大家朝夕相處假日也是一起在島上不管好的壞的也都是大家一起經歷跟連上弟兄感情上會比在新訓好上許多。東引地區又分東引島跟西引島，東引地形有點像是在山上起伏很大雖然真的很小東引走直線橫穿經過村里到另一側只要十分鐘，島上主要生活地區在東引島樂華村飲料店網咖民宿吃的喝的都在這裡"></a>踏上東引看到核心營區第一個反應就是這甚麼破地方，山丘下一棟單層小破迷彩鐵皮營舍浴室廁所還在外面整個充滿陽春感跟新訓還有韋昌嶺的環境截然不同，一瞬間有點後悔為甚麼要選東引但是習慣之後就覺得其實還不錯，連上幹部人都很好相處起來都不錯生活有說有笑士官長更是陪伴了我們大部分時間，在島上當兵的日子每天都會發生一些有趣的事情也因為大家朝夕相處假日也是一起在島上不管好的壞的也都是大家一起經歷跟連上弟兄感情上會比在新訓好上許多。東引地區又分東引島跟西引島，東引地形有點像是在山上起伏很大雖然真的很小東引走直線橫穿經過村里到另一側只要十分鐘，島上主要生活地區在東引島樂華村飲料店網咖民宿吃的喝的都在這裡</h5><h5 id="食物莒興雞排、臻享茶、懂飲、伊凡、第一民宿、轉角、劉家在這邊當兵都會很常吃到尤其是在步兵連因為你得自己叫食物加菜，雞排推薦莒興雞排炸雞推薦肌肉男-剛開-飲料則是臻享茶，島上只有一間小七雖說小七通常賣得比貴但是在這邊小七真的不算什麼去其他雜貨店買會貴上五塊十塊二十塊，主要常去有兩間雜貨店亨裕超市還有長宏東西有點小貴"><a href="#食物莒興雞排、臻享茶、懂飲、伊凡、第一民宿、轉角、劉家在這邊當兵都會很常吃到尤其是在步兵連因為你得自己叫食物加菜，雞排推薦莒興雞排炸雞推薦肌肉男-剛開-飲料則是臻享茶，島上只有一間小七雖說小七通常賣得比貴但是在這邊小七真的不算什麼去其他雜貨店買會貴上五塊十塊二十塊，主要常去有兩間雜貨店亨裕超市還有長宏東西有點小貴" class="headerlink" title="食物莒興雞排、臻享茶、懂飲、伊凡、第一民宿、轉角、劉家在這邊當兵都會很常吃到尤其是在步兵連因為你得自己叫食物加菜，雞排推薦莒興雞排炸雞推薦肌肉男(剛開)飲料則是臻享茶，島上只有一間小七雖說小七通常賣得比貴但是在這邊小七真的不算什麼去其他雜貨店買會貴上五塊十塊二十塊，主要常去有兩間雜貨店亨裕超市還有長宏東西有點小貴"></a>食物莒興雞排、臻享茶、懂飲、伊凡、第一民宿、轉角、劉家在這邊當兵都會很常吃到尤其是在步兵連因為你得自己叫食物加菜，雞排推薦莒興雞排炸雞推薦肌肉男(剛開)飲料則是臻享茶，島上只有一間小七雖說小七通常賣得比貴但是在這邊小七真的不算什麼去其他雜貨店買會貴上五塊十塊二十塊，主要常去有兩間雜貨店亨裕超市還有長宏東西有點小貴</h5><blockquote>
<p>怎麼一直在領錢啊</p>
</blockquote>
<h5 id="網咖的部分目前剩下一間網咖在東引叫做e網，一小時差不多40塊都是包廂設備還行整體不錯休假無聊的好去處"><a href="#網咖的部分目前剩下一間網咖在東引叫做e網，一小時差不多40塊都是包廂設備還行整體不錯休假無聊的好去處" class="headerlink" title="網咖的部分目前剩下一間網咖在東引叫做e網，一小時差不多40塊都是包廂設備還行整體不錯休假無聊的好去處"></a>網咖的部分目前剩下一間網咖在東引叫做e網，一小時差不多40塊都是包廂設備還行整體不錯休假無聊的好去處</h5><h5 id="除了網咖還能去泡在咖啡廳度過一整個下午島上有兩間咖啡廳分別是長堤還有鹹味島合作社，鹹味島點了一杯咖啡就可以坐一整天店內還有兩隻很親人的貓而且店內氣氛地點不錯蠻推薦的，長堤則是到五月才營業沒去過有點可惜"><a href="#除了網咖還能去泡在咖啡廳度過一整個下午島上有兩間咖啡廳分別是長堤還有鹹味島合作社，鹹味島點了一杯咖啡就可以坐一整天店內還有兩隻很親人的貓而且店內氣氛地點不錯蠻推薦的，長堤則是到五月才營業沒去過有點可惜" class="headerlink" title="除了網咖還能去泡在咖啡廳度過一整個下午島上有兩間咖啡廳分別是長堤還有鹹味島合作社，鹹味島點了一杯咖啡就可以坐一整天店內還有兩隻很親人的貓而且店內氣氛地點不錯蠻推薦的，長堤則是到五月才營業沒去過有點可惜"></a>除了網咖還能去泡在咖啡廳度過一整個下午島上有兩間咖啡廳分別是長堤還有鹹味島合作社，鹹味島點了一杯咖啡就可以坐一整天店內還有兩隻很親人的貓而且店內氣氛地點不錯蠻推薦的，長堤則是到五月才營業沒去過有點可惜</h5><h5 id="西引島就沒甚麼商店印象中只有幾間民宿跟不知道有沒有開的網咖還有一間商店叫”兩洞洞”"><a href="#西引島就沒甚麼商店印象中只有幾間民宿跟不知道有沒有開的網咖還有一間商店叫”兩洞洞”" class="headerlink" title="西引島就沒甚麼商店印象中只有幾間民宿跟不知道有沒有開的網咖還有一間商店叫”兩洞洞”"></a>西引島就沒甚麼商店印象中只有幾間民宿跟不知道有沒有開的網咖還有一間商店叫”兩洞洞”</h5><h5 id="至於出去玩東引景點也就那幾個，還有阿兵哥不能釣魚也不能下水只能到處拍照"><a href="#至於出去玩東引景點也就那幾個，還有阿兵哥不能釣魚也不能下水只能到處拍照" class="headerlink" title="至於出去玩東引景點也就那幾個，還有阿兵哥不能釣魚也不能下水只能到處拍照"></a>至於出去玩東引景點也就那幾個，還有阿兵哥不能釣魚也不能下水只能到處拍照</h5><h5 id="站哨也是個難忘的回憶在圓圓澳站哨天氣好時就可以看到對岸，空拍機無人機不明漁船都有機會出現軍演時更是出現頻繁第一次站夜哨時看到有船靠近還真的有點小緊張，除了這個還有安全士官叫錯人被強迫起床重睡到現在還是懷恨在心"><a href="#站哨也是個難忘的回憶在圓圓澳站哨天氣好時就可以看到對岸，空拍機無人機不明漁船都有機會出現軍演時更是出現頻繁第一次站夜哨時看到有船靠近還真的有點小緊張，除了這個還有安全士官叫錯人被強迫起床重睡到現在還是懷恨在心" class="headerlink" title="站哨也是個難忘的回憶在圓圓澳站哨天氣好時就可以看到對岸，空拍機無人機不明漁船都有機會出現軍演時更是出現頻繁第一次站夜哨時看到有船靠近還真的有點小緊張，除了這個還有安全士官叫錯人被強迫起床重睡到現在還是懷恨在心"></a>站哨也是個難忘的回憶在圓圓澳站哨天氣好時就可以看到對岸，空拍機無人機不明漁船都有機會出現軍演時更是出現頻繁第一次站夜哨時看到有船靠近還真的有點小緊張，除了這個還有安全士官叫錯人被強迫起床重睡到現在還是懷恨在心</h5><h4 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h4><h5 id="這次自願來東引任何方面來看絕對是明智的選擇"><a href="#這次自願來東引任何方面來看絕對是明智的選擇" class="headerlink" title="這次自願來東引任何方面來看絕對是明智的選擇"></a>這次自願來東引任何方面來看絕對是明智的選擇</h5>]]></content>
  </entry>
  <entry>
    <title>Animations30 Day2</title>
    <url>/2020/09/21/Animations30Day2/</url>
    <content><![CDATA[<h2 id="用到了"><a href="#用到了" class="headerlink" title="用到了"></a>用到了</h2><ul>
<li>Pixi.js</li>
<li>GSAP</li>
</ul>
<hr>
<h1 id="PIXI-JS"><a href="#PIXI-JS" class="headerlink" title="PIXI.JS"></a>PIXI.JS</h1><h5 id="pixi-js-是專門用來做-2D-動畫的渲染庫，速度快，體積小-有了他可以不用深入研究-webGL-而且瀏覽器相容性問題他都幫你處理好了"><a href="#pixi-js-是專門用來做-2D-動畫的渲染庫，速度快，體積小-有了他可以不用深入研究-webGL-而且瀏覽器相容性問題他都幫你處理好了" class="headerlink" title="pixi.js 是專門用來做 2D 動畫的渲染庫，速度快，體積小 有了他可以不用深入研究 webGL 而且瀏覽器相容性問題他都幫你處理好了"></a>pixi.js 是專門用來做 2D 動畫的渲染庫，速度快，體積小 有了他可以不用深入研究 webGL 而且瀏覽器相容性問題他都幫你處理好了</h5><h1 id="起手式"><a href="#起手式" class="headerlink" title="起手式"></a>起手式</h1><h5 id="導入-cdn"><a href="#導入-cdn" class="headerlink" title="導入 cdn"></a>導入 cdn</h5><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/pixi.js/5.0.2/pixi.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h5 id="然後開始"><a href="#然後開始" class="headerlink" title="然後開始"></a>然後開始</h5><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//首先我們要做的是建立一個新的PIXI容器</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> PIXI.Application(&#123;</span><br><span class="line">    width:window.innerWidth,</span><br><span class="line">    height:window.innerHeight,</span><br><span class="line"><span class="comment">//其他還有很多屬性</span></span><br><span class="line">    view</span><br><span class="line">    backgroundColor</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 把容器掛上去</span></span><br><span class="line">doucument.body.appendChild(app.view)</span><br><span class="line"></span><br><span class="line"><span class="comment">//建立貼圖</span></span><br><span class="line"><span class="comment">// 先導入圖片</span></span><br><span class="line"><span class="keyword">const</span> textTrue = PIXI.Texture.<span class="keyword">from</span>(<span class="string">&#x27;./asset/example.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用圖片創建紋理</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> player = <span class="keyword">new</span> PIXI.Sprite(textTrue)</span><br><span class="line"></span><br><span class="line"><span class="comment">//這時候應該你的圖片會顯示在動畫容器裡面</span></span><br><span class="line"><span class="comment">//設定一下圖片位置</span></span><br><span class="line">player.x = app.view.width / <span class="number">2</span></span><br><span class="line">player.y = app.view.height / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//簡單的旋轉動畫</span></span><br><span class="line"><span class="function">function <span class="title">animation</span> ()</span>&#123;</span><br><span class="line">  player.rotation += <span class="number">0.1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ticker是用來更新畫面，PIXI都幫你處理好底下的一些邏輯，以往都要自己寫</span></span><br><span class="line">app.ticker.<span class="keyword">add</span>(animation)</span><br><span class="line"></span><br><span class="line"><span class="comment">//這時候他應該會開始旋轉</span></span><br></pre></td></tr></table></figure>

<h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><h5 id="今天原本是打算用-gsap-pixi-做一個滾動的故事動畫可是要研究的東西比我想像中的還要多，PIXI-是一個很強大的動畫庫，而且很有趣"><a href="#今天原本是打算用-gsap-pixi-做一個滾動的故事動畫可是要研究的東西比我想像中的還要多，PIXI-是一個很強大的動畫庫，而且很有趣" class="headerlink" title="今天原本是打算用 gsap + pixi 做一個滾動的故事動畫可是要研究的東西比我想像中的還要多，PIXI 是一個很強大的動畫庫，而且很有趣"></a>今天原本是打算用 gsap + pixi 做一個滾動的故事動畫可是要研究的東西比我想像中的還要多，PIXI 是一個很強大的動畫庫，而且很有趣</h5>]]></content>
      <tags>
        <tag>pixijs</tag>
      </tags>
  </entry>
  <entry>
    <title>2023 關西-東引當兵心得(關西篇)</title>
    <url>/2023/04/22/2023%E7%95%B6%E5%85%B5%E5%BF%83%E5%BE%97-%E9%97%9C%E8%A5%BF%E7%AF%87/</url>
    <content><![CDATA[<h4 id="今年1-x2F-12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考"><a href="#今年1-x2F-12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考" class="headerlink" title="今年1&#x2F;12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考"></a>今年1&#x2F;12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考</h4><hr>
<h3 id="第一階段-關西206旅2營2連"><a href="#第一階段-關西206旅2營2連" class="headerlink" title="第一階段 關西206旅2營2連"></a>第一階段 關西206旅2營2連</h3><h4 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h4><p>寢室：72人大通鋪4人一床上下鋪環境一般<br>浴廁：廁所很爛小便斗全壞，蹲式也有幾間故障72人用四間蹲式大小便，二樓浴室尚可三樓有間只有熱水<br>食物：五菜一湯品項在比較各單位之後算好了，但是時常過油過鹹，蛋永遠有焦味</p>
<h4 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h4><blockquote>
<p>第一二周都是在填資料還有聽招募比較多，以下是正式開始上課的日常</p>
</blockquote>
<p>5:30 起床折棉被換衣服廁所排隊<br>6:20 集合取裝&#x2F;吃飯<br>7:40 早點名&#x2F;集合<br>操課(基本教練&#x2F;單戰&#x2F;射擊預習&#x2F;刺槍術&#x2F;手投&#x2F;打靶)<br>11:00 準備吃飯<br>12:00 吃飯午休<br>13:20 起床準備集合<br>操課<br>16:00 運動<br>17:00 準備吃飯&#x2F;盥洗<br>18:00 吃飯</p>
<h4 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h4><p>沒什麼彈性，假如你不曾聽過快樂釐頭山、金六結快樂營、隔壁五營，然後抱著一顆無慾無求心跟做好會遇到最壞狀況的心理建設，那恭喜你在這邊過一個月沒問題，我在進來前問過剛從這退的同學這裡生活怎麼樣，他是這樣描述</p>
<blockquote>
<p>前面精神上的痛苦後面肉體上的痛苦</p>
</blockquote>
<h5 id="進去後每度過一天這句話的體悟就越深刻，第一週努力融入環境一堆東西要記，第二週有招募雖然比較不無聊但是在那個椅子上坐幾個小時屁股真的受不了，建議招募能多聽就多聽只有好處沒有壞處，第三週後開始正常操課肉體開始感到痛苦精神的痛苦並沒有減少太多只是來源變得很多元一言難盡，刺不完的最後一次刺槍術-、非常糟糕的廁所、密集的登山、白目弟兄、沒福利只有破事的洗衣公差、越來越累的身體，我們這梯最大的幸運就是沒有在操課的時候遇到大雨不曾穿過雨衣"><a href="#進去後每度過一天這句話的體悟就越深刻，第一週努力融入環境一堆東西要記，第二週有招募雖然比較不無聊但是在那個椅子上坐幾個小時屁股真的受不了，建議招募能多聽就多聽只有好處沒有壞處，第三週後開始正常操課肉體開始感到痛苦精神的痛苦並沒有減少太多只是來源變得很多元一言難盡，刺不完的最後一次刺槍術-、非常糟糕的廁所、密集的登山、白目弟兄、沒福利只有破事的洗衣公差、越來越累的身體，我們這梯最大的幸運就是沒有在操課的時候遇到大雨不曾穿過雨衣" class="headerlink" title="進去後每度過一天這句話的體悟就越深刻，第一週努力融入環境一堆東西要記，第二週有招募雖然比較不無聊但是在那個椅子上坐幾個小時屁股真的受不了，建議招募能多聽就多聽只有好處沒有壞處，第三週後開始正常操課肉體開始感到痛苦精神的痛苦並沒有減少太多只是來源變得很多元一言難盡，刺不完的最後一次刺槍術 、非常糟糕的廁所、密集的登山、白目弟兄、沒福利只有破事的洗衣公差、越來越累的身體，我們這梯最大的幸運就是沒有在操課的時候遇到大雨不曾穿過雨衣"></a>進去後每度過一天這句話的體悟就越深刻，第一週努力融入環境一堆東西要記，第二週有招募雖然比較不無聊但是在那個椅子上坐幾個小時屁股真的受不了，建議招募能多聽就多聽只有好處沒有壞處，第三週後開始正常操課肉體開始感到痛苦精神的痛苦並沒有減少太多只是來源變得很多元一言難盡，刺不完的最後一次刺槍術 、非常糟糕的廁所、密集的登山、白目弟兄、沒福利只有破事的洗衣公差、越來越累的身體，我們這梯最大的幸運就是沒有在操課的時候遇到大雨不曾穿過雨衣</h5><h5 id="在那邊來痛苦的來源大致來自兩個一是來自同袍弟兄二是來自生活環境，會搞你的永遠是自己人如何調適心理是在那邊生活我覺得最重要的課題，生活環境廁所糟透了洗滌區也糟透了在休息時間分秒必爭的狀況下可以看到鄰兵如何快速吃完飯洗完碗使用各種手段完成洗澡這活動。洗不到澡乾脆不洗澡是常態，給未來到2營2連的弟兄一句話"><a href="#在那邊來痛苦的來源大致來自兩個一是來自同袍弟兄二是來自生活環境，會搞你的永遠是自己人如何調適心理是在那邊生活我覺得最重要的課題，生活環境廁所糟透了洗滌區也糟透了在休息時間分秒必爭的狀況下可以看到鄰兵如何快速吃完飯洗完碗使用各種手段完成洗澡這活動。洗不到澡乾脆不洗澡是常態，給未來到2營2連的弟兄一句話" class="headerlink" title="在那邊來痛苦的來源大致來自兩個一是來自同袍弟兄二是來自生活環境，會搞你的永遠是自己人如何調適心理是在那邊生活我覺得最重要的課題，生活環境廁所糟透了洗滌區也糟透了在休息時間分秒必爭的狀況下可以看到鄰兵如何快速吃完飯洗完碗使用各種手段完成洗澡這活動。洗不到澡乾脆不洗澡是常態，給未來到2營2連的弟兄一句話"></a>在那邊來痛苦的來源大致來自兩個一是來自同袍弟兄二是來自生活環境，會搞你的永遠是自己人如何調適心理是在那邊生活我覺得最重要的課題，生活環境廁所糟透了洗滌區也糟透了在休息時間分秒必爭的狀況下可以看到鄰兵如何快速吃完飯洗完碗使用各種手段完成洗澡這活動。洗不到澡乾脆不洗澡是常態，給未來到2營2連的弟兄一句話</h5><blockquote>
<p>沒有慾望就沒有痛苦、欲望會帶來痛苦如果洗澡會讓你痛苦就別洗了吧</p>
</blockquote>
<h4 id="準備物品"><a href="#準備物品" class="headerlink" title="準備物品"></a>準備物品</h4><h5 id="濕紙巾、衛生紙、洗碗精、菜瓜布、奇異筆、黑藍筆-2、姓名貼沒有拿透氣膠帶或者其他方法自行應變、膠帶、行充、錢2500左右、免洗筷、盥洗物品、指甲剪、刮鬍刀"><a href="#濕紙巾、衛生紙、洗碗精、菜瓜布、奇異筆、黑藍筆-2、姓名貼沒有拿透氣膠帶或者其他方法自行應變、膠帶、行充、錢2500左右、免洗筷、盥洗物品、指甲剪、刮鬍刀" class="headerlink" title="濕紙巾、衛生紙、洗碗精、菜瓜布、奇異筆、黑藍筆*2、姓名貼沒有拿透氣膠帶或者其他方法自行應變、膠帶、行充、錢2500左右、免洗筷、盥洗物品、指甲剪、刮鬍刀"></a>濕紙巾、衛生紙、洗碗精、菜瓜布、奇異筆、黑藍筆*2、姓名貼沒有拿透氣膠帶或者其他方法自行應變、膠帶、行充、錢2500左右、免洗筷、盥洗物品、指甲剪、刮鬍刀</h5><blockquote>
<p>入營後會給營站購買清單記得都買齊<br>建議買防水袋四個，裝錢包鞋油小東西很好用<br>不用帶書了沒時間看，帶了也會被收走書籍屬於違禁品<br>別帶腦子</p>
</blockquote>
]]></content>
      <tags>
        <tag>2023當兵</tag>
      </tags>
  </entry>
  <entry>
    <title>AspMvc路由至靜態Html</title>
    <url>/2023/06/08/AspMvc%E8%B7%AF%E7%94%B1%E8%87%B3%E9%9D%9C%E6%85%8BHtml/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ActionResult <span class="title">MyHtml</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">     <span class="keyword">var</span> result = <span class="keyword">new</span> FilePathResult(<span class="string">$&quot;~/Views/<span class="subst">&#123;htmlPageName&#125;</span>.html&quot;</span>, <span class="string">&quot;text/html&quot;</span></span>)</span>;</span><br><span class="line">     <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Animations30 Day3</title>
    <url>/2020/09/23/Animations30Day3/</url>
    <content><![CDATA[<h2 id="整理一下目前我對pixi的了解"><a href="#整理一下目前我對pixi的了解" class="headerlink" title="整理一下目前我對pixi的了解"></a>整理一下目前我對pixi的了解</h2><ul>
<li>container   (放圖形的容器可以有很多個，可以用來分組)</li>
<li>stage         (是在Application底下的成員，根畫面容器，跟他的意思一樣就是舞台)</li>
<li>loader       (預加載器 渲染需要先把素材轉換成WebGL GPU能使用的圖片，就是紋理)</li>
<li>ticker         (Application的成員 ,用來更新畫面)</li>
<li>application (建立PIXI動畫的class，會自動產生 ticker  ,renderer ,root container)</li>
</ul>
<h3 id="大概的藍圖"><a href="#大概的藍圖" class="headerlink" title="大概的藍圖"></a>大概的藍圖</h3><ol>
<li>載入緩存素材</li>
<li>初始化</li>
<li>ticker更新</li>
<li>其他邏輯</li>
</ol>
<h2 id="研究文件"><a href="#研究文件" class="headerlink" title="研究文件"></a>研究文件</h2><p>待續</p>
]]></content>
      <tags>
        <tag>pixijs</tag>
      </tags>
  </entry>
  <entry>
    <title>Asp.NET WebForm前端傳遞資料到C#</title>
    <url>/2023/05/23/AspNET_WebForm_%E5%89%8D%E7%AB%AF%E5%82%B3%E9%81%9E%E8%B3%87%E6%96%99%E5%88%B0C#/</url>
    <content><![CDATA[<h1 id="使用-HiddenField"><a href="#使用-HiddenField" class="headerlink" title="使用 HiddenField"></a>使用 HiddenField</h1><h5 id="這是-ASP-的-HiddenField-控件"><a href="#這是-ASP-的-HiddenField-控件" class="headerlink" title="這是 ASP 的 HiddenField 控件"></a>這是 ASP 的 HiddenField 控件</h5><h6 id="屬性"><a href="#屬性" class="headerlink" title="屬性"></a>屬性</h6><ul>
<li>ID:ASP 的控件都會需要 ID 這會在 designer.aspx.cs 中使用 ID 名稱自動建立控件提供 aspx.cs 檔案操作控件</li>
<li>runat:標示為伺服器端控件讓伺服器端可以直接訪問</li>
<li>Value:可以填一些字串資料在裡面，hiddenField 會用 Post 方法回傳至伺服器端</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;asp:HiddenField ID=&quot;HiddenData&quot; runat=&quot;server&quot; Value=&quot;&quot; /&gt;</span><br></pre></td></tr></table></figure>

<h5 id="使用-JavaScript-填入資料"><a href="#使用-JavaScript-填入資料" class="headerlink" title="使用 JavaScript 填入資料"></a>使用 JavaScript 填入資料</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可以用ID訪問元素</span></span><br><span class="line"><span class="keyword">var</span> hiddenField = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#HiddenData&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//跟一般的元素屬性操作一樣，指定vlaue為想要的字串就可以了</span><br><span class="line">hiddenField.value =&quot;我很隱密&quot;</span><br></pre></td></tr></table></figure>

<h5 id="缺點"><a href="#缺點" class="headerlink" title="缺點"></a>缺點</h5><h6 id="不能放一些敏感的資訊比如-Token-之類的因為可以直接在前端看到並且修改，真的要傳遞資料還是乖乖-CallAPI"><a href="#不能放一些敏感的資訊比如-Token-之類的因為可以直接在前端看到並且修改，真的要傳遞資料還是乖乖-CallAPI" class="headerlink" title="不能放一些敏感的資訊比如 Token 之類的因為可以直接在前端看到並且修改，真的要傳遞資料還是乖乖 CallAPI"></a>不能放一些敏感的資訊比如 Token 之類的因為可以直接在前端看到並且修改，真的要傳遞資料還是乖乖 CallAPI</h6><h1 id="使用-POST"><a href="#使用-POST" class="headerlink" title="使用 POST"></a>使用 POST</h1><h6 id="每次有呼叫頁面都會觸發-WebForm-的-Page-load-事件，這時可以在這裡捕捉-Request-HttpMethod-如果是-POST-在做處裡也可以處裡其他事件"><a href="#每次有呼叫頁面都會觸發-WebForm-的-Page-load-事件，這時可以在這裡捕捉-Request-HttpMethod-如果是-POST-在做處裡也可以處裡其他事件" class="headerlink" title="每次有呼叫頁面都會觸發 WebForm 的 Page_load 事件，這時可以在這裡捕捉 Request.HttpMethod 如果是 POST 在做處裡也可以處裡其他事件"></a>每次有呼叫頁面都會觸發 WebForm 的 Page_load 事件，這時可以在這裡捕捉 Request.HttpMethod 如果是 POST 在做處裡也可以處裡其他事件</h6><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> reader = <span class="keyword">new</span> System.IO.StreamReader(Request.InputStream) )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> body = reader.ReadToEnd();</span><br><span class="line">    <span class="keyword">if</span> (Request.HttpMethod==<span class="string">&quot;POST&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//HandleFunc here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="URL-參數"><a href="#URL-參數" class="headerlink" title="URL 參數"></a>URL 參數</h1><h5 id="PostBack-時在-Url-裡面塞參數帶回去在做處裡"><a href="#PostBack-時在-Url-裡面塞參數帶回去在做處裡" class="headerlink" title="PostBack 時在 Url 裡面塞參數帶回去在做處裡"></a>PostBack 時在 Url 裡面塞參數帶回去在做處裡</h5>]]></content>
      <tags>
        <tag>Asp.NET</tag>
      </tags>
  </entry>
  <entry>
    <title>2023 關西-東引當兵心得(韋昌嶺篇)</title>
    <url>/2023/04/22/2023%E7%95%B6%E5%85%B5%E5%BF%83%E5%BE%97-%E9%9F%8B%E6%98%8C%E5%B6%BA%E7%AF%87/</url>
    <content><![CDATA[<h4 id="今年1-x2F-12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考。第二階段前往馬祖服役的弟兄都會到韋昌嶺等船開，幸運的話當天晚上就走了不幸的話就會滯留在那裏我們166梯滯留一個禮拜163梯滯留19天-床板底下文字紀錄-，記錄下來分享給自願或不願意即將前往外島的弟兄"><a href="#今年1-x2F-12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考。第二階段前往馬祖服役的弟兄都會到韋昌嶺等船開，幸運的話當天晚上就走了不幸的話就會滯留在那裏我們166梯滯留一個禮拜163梯滯留19天-床板底下文字紀錄-，記錄下來分享給自願或不願意即將前往外島的弟兄" class="headerlink" title="今年1&#x2F;12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考。第二階段前往馬祖服役的弟兄都會到韋昌嶺等船開，幸運的話當天晚上就走了不幸的話就會滯留在那裏我們166梯滯留一個禮拜163梯滯留19天(床板底下文字紀錄)，記錄下來分享給自願或不願意即將前往外島的弟兄"></a>今年1&#x2F;12進去當兵了因為二階段是外島的關係提前出來趁記憶還沒模糊寫個心得記錄下來，順便分享一下兩個階段的心得感想給後來人當作參考。第二階段前往馬祖服役的弟兄都會到韋昌嶺等船開，幸運的話當天晚上就走了不幸的話就會滯留在那裏我們166梯滯留一個禮拜163梯滯留19天(床板底下文字紀錄)，記錄下來分享給自願或不願意即將前往外島的弟兄</h4><hr>
<h3 id="第二階段過度-韋昌嶺「馬祖前送官兵轉運站」"><a href="#第二階段過度-韋昌嶺「馬祖前送官兵轉運站」" class="headerlink" title="第二階段過度-韋昌嶺「馬祖前送官兵轉運站」"></a>第二階段過度-韋昌嶺「馬祖前送官兵轉運站」</h3><h4 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h4><p>寢室：非常老舊，在二三樓左右兩邊都有大通鋪提供給要去東引但是沒船滯留的人睡因為通常都不會有人睡所以床上灰塵很多，沒開窗戶會悶熱並成為病毒養蠱中心<br>浴廁：大致上還可以老舊但是環境跟設備上跟206比好上太多了<br>食物：四菜一湯，品項普通偏清淡</p>
<h4 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h4><blockquote>
<p>雖然滯留在那但是還是要上課的，但只是做個表面而已</p>
</blockquote>
<p>5:30 起床折棉<br>6:20 集合吃飯<br>7:40 集合<br>操課(基本教練)<br>11:00 準備吃飯<br>12:00 吃飯午休<br>13:50 起床準備集合<br>操課(看宣教影片)<br>16:00 運動<br>17:00 準備吃飯&#x2F;盥洗<br>18:00 吃飯<br>21:30 就寢</p>
<h4 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h4><h5 id="第一天剛來的時候不太滿意，整體老舊內物櫃不夠內務不知道要怎麼搞食物比關西還要差重點是很多餐盤都發霉集合有一段路沒遮雨常常淋雨，早上還要基本教練操課看到去其他單位的弟兄已經開始迎接快樂新生活比爽度有嚴重的落差感，但是沒過多久之後也慢慢體會到這邊的優點比如班長人都很好給我們的彈性非常大整體上沒什麼壓力而且晚上可以訂外食"><a href="#第一天剛來的時候不太滿意，整體老舊內物櫃不夠內務不知道要怎麼搞食物比關西還要差重點是很多餐盤都發霉集合有一段路沒遮雨常常淋雨，早上還要基本教練操課看到去其他單位的弟兄已經開始迎接快樂新生活比爽度有嚴重的落差感，但是沒過多久之後也慢慢體會到這邊的優點比如班長人都很好給我們的彈性非常大整體上沒什麼壓力而且晚上可以訂外食" class="headerlink" title="第一天剛來的時候不太滿意，整體老舊內物櫃不夠內務不知道要怎麼搞食物比關西還要差重點是很多餐盤都發霉集合有一段路沒遮雨常常淋雨，早上還要基本教練操課看到去其他單位的弟兄已經開始迎接快樂新生活比爽度有嚴重的落差感，但是沒過多久之後也慢慢體會到這邊的優點比如班長人都很好給我們的彈性非常大整體上沒什麼壓力而且晚上可以訂外食"></a>第一天剛來的時候不太滿意，整體老舊內物櫃不夠內務不知道要怎麼搞食物比關西還要差重點是很多餐盤都發霉集合有一段路沒遮雨常常淋雨，早上還要基本教練操課看到去其他單位的弟兄已經開始迎接快樂新生活比爽度有嚴重的落差感，但是沒過多久之後也慢慢體會到這邊的優點比如班長人都很好給我們的彈性非常大整體上沒什麼壓力而且晚上可以訂外食</h5><blockquote>
<p>至少檯面上的做好檯面下才有彈性想要什麼樣的生活自己爭取都是互相的，這句話在接下來的兩個月都用的到</p>
</blockquote>
<h5 id="假如滿分五分關西分數是1分，那這邊我給3分"><a href="#假如滿分五分關西分數是1分，那這邊我給3分" class="headerlink" title="假如滿分五分關西分數是1分，那這邊我給3分"></a>假如滿分五分關西分數是1分，那這邊我給3分</h5>]]></content>
      <tags>
        <tag>2023當兵</tag>
      </tags>
  </entry>
  <entry>
    <title>JASS_基本函數筆記</title>
    <url>/2023/06/13/JASS-%E5%9F%BA%E6%9C%AC%E5%87%BD%E6%95%B8%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<blockquote>
<p>使用Ctrl + F快速搜尋</p>
</blockquote>
<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><h3 id="將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家"><a href="#將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家" class="headerlink" title="將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家"></a>將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家</h3>]]></content>
      <tags>
        <tag>WE</tag>
        <tag>JASS</tag>
      </tags>
  </entry>
  <entry>
    <title>JASS_基本知識</title>
    <url>/2023/06/13/JASS-%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AD%98/</url>
    <content><![CDATA[<blockquote>
<p>使用 Ctrl + F 快速搜尋</p>
</blockquote>
<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><h3 id="將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家。"><a href="#將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家。" class="headerlink" title="將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家。"></a>將一些過去的經驗整理出來，有人來問時可以比較有系統的將知識傳遞給對方，近年資源也日漸稀少而且分散做個紀錄也方便大家。</h3><h3 id="完整的編輯器教學請去流連忘返的世界編輯器自學指南"><a href="#完整的編輯器教學請去流連忘返的世界編輯器自學指南" class="headerlink" title="完整的編輯器教學請去流連忘返的世界編輯器自學指南"></a>完整的編輯器教學請去流連忘返的世界編輯器自學指南<a href="https://www.wasabistudio.ca/wikis/we/"></a></h3><h1 id="JASS-是甚麼"><a href="#JASS-是甚麼" class="headerlink" title="JASS 是甚麼"></a>JASS 是甚麼</h1><h3 id="JASS-是暴雪開發的一款用於魔獸爭霸創建地圖的腳本語言，提供了非常豐富的-APId"><a href="#JASS-是暴雪開發的一款用於魔獸爭霸創建地圖的腳本語言，提供了非常豐富的-APId" class="headerlink" title="JASS 是暴雪開發的一款用於魔獸爭霸創建地圖的腳本語言，提供了非常豐富的 APId"></a>JASS 是暴雪開發的一款用於魔獸爭霸創建地圖的腳本語言，提供了非常豐富的 APId</h3><h1 id="為甚麼要使用-JASS"><a href="#為甚麼要使用-JASS" class="headerlink" title="為甚麼要使用 JASS"></a>為甚麼要使用 JASS</h1><ol>
<li>所有 GUI 觸發器本質上都是 JASS，他只是多了視覺化的操作而已</li>
<li>解放限制讓你能完整使用觸發器強大的功能</li>
<li>可以把一些常用功能寫成函數在各個地方使用</li>
<li>你會很常需要使用自訂函數，區域變數等功能使用 GUI 操作上會變得非常複雜</li>
<li>你可以在 vs code 或其他文字編輯器中編輯、管理腳本，函數自動提示語法高量會讓你的生活輕鬆很多</li>
<li>你不會因為崩潰損失未存檔的代碼還原只需要複製貼上</li>
</ol>
<h1 id="全域變數"><a href="#全域變數" class="headerlink" title="全域變數"></a>全域變數</h1><h3 id="定義方式"><a href="#定義方式" class="headerlink" title="定義方式"></a>定義方式</h3><h4 id="觸發器介面中新增變數也是這種方式，腳本中所有-globals-區塊都會被移到腳本最上層，可以定義在任何地方這些變數在整個腳本中都可以讀取到"><a href="#觸發器介面中新增變數也是這種方式，腳本中所有-globals-區塊都會被移到腳本最上層，可以定義在任何地方這些變數在整個腳本中都可以讀取到" class="headerlink" title="觸發器介面中新增變數也是這種方式，腳本中所有 globals 區塊都會被移到腳本最上層，可以定義在任何地方這些變數在整個腳本中都可以讀取到"></a>觸發器介面中新增變數也是這種方式，腳本中所有 globals 區塊都會被移到腳本最上層，可以定義在任何地方這些變數在整個腳本中都可以讀取到</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function Init_globals takes nothing returns nothing</span><br><span class="line">  globals</span><br><span class="line">    //在這邊定義全域變數</span><br><span class="line">  endglobals</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>

<h1 id="區域變數"><a href="#區域變數" class="headerlink" title="區域變數"></a>區域變數</h1><h3 id="使用-local-可以定義只在這個函數存在的變數，有個小重點魔獸爭霸是不會自動回收沒使用的變數的，有繼承-handle-的物件都必須手動銷毀和指向-null，不然在大量執行後會導致記憶體外洩造成崩潰最常見的是點-location-沒有清理。"><a href="#使用-local-可以定義只在這個函數存在的變數，有個小重點魔獸爭霸是不會自動回收沒使用的變數的，有繼承-handle-的物件都必須手動銷毀和指向-null，不然在大量執行後會導致記憶體外洩造成崩潰最常見的是點-location-沒有清理。" class="headerlink" title="使用 local 可以定義只在這個函數存在的變數，有個小重點魔獸爭霸是不會自動回收沒使用的變數的，有繼承 handle 的物件都必須手動銷毀和指向 null，不然在大量執行後會導致記憶體外洩造成崩潰最常見的是點(location)沒有清理。"></a>使用 local 可以定義只在這個函數存在的變數，有個小重點魔獸爭霸是不會自動回收沒使用的變數的，有繼承 handle 的物件都必須手動銷毀和指向 null，不然在大量執行後會導致記憶體外洩造成崩潰最常見的是點(location)沒有清理。</h3><h3 id="要更改變數資料要使用-set-變數名稱-x3D-值"><a href="#要更改變數資料要使用-set-變數名稱-x3D-值" class="headerlink" title="要更改變數資料要使用 set [變數名稱]&#x3D;[值]"></a>要更改變數資料要使用 set [變數名稱]&#x3D;[值]</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function Local takes nothing returns nothing</span><br><span class="line"> local unit u= null</span><br><span class="line"> set u = null</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>

<h1 id="呼叫其他函數-function"><a href="#呼叫其他函數-function" class="headerlink" title="呼叫其他函數(function)"></a>呼叫其他函數(function)</h1><h3 id="在函數中要使用其他函數都必須使用-call，記得注意函數在腳本中的順序"><a href="#在函數中要使用其他函數都必須使用-call，記得注意函數在腳本中的順序" class="headerlink" title="在函數中要使用其他函數都必須使用 call，記得注意函數在腳本中的順序"></a>在函數中要使用其他函數都必須使用 call，記得注意函數在腳本中的順序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function Local takes nothing returns nothing</span><br><span class="line">    call functionName()</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>

<h1 id="觸發器-Trigger"><a href="#觸發器-Trigger" class="headerlink" title="觸發器(Trigger)"></a>觸發器(Trigger)</h1><h3 id="相信開始接觸-Jass-代表你對觸發器已經有基本的概念，觸發器在-GUI-中主要分為三個部分-事件、條件、動作，在編輯-gt-轉化為自訂義腳本中可以發現在-JASS-中觸發器也是分成這三個部分，只是多了一個負責-InitTrigger-的部分。"><a href="#相信開始接觸-Jass-代表你對觸發器已經有基本的概念，觸發器在-GUI-中主要分為三個部分-事件、條件、動作，在編輯-gt-轉化為自訂義腳本中可以發現在-JASS-中觸發器也是分成這三個部分，只是多了一個負責-InitTrigger-的部分。" class="headerlink" title="相信開始接觸 Jass 代表你對觸發器已經有基本的概念，觸發器在 GUI 中主要分為三個部分 事件、條件、動作，在編輯-&gt;轉化為自訂義腳本中可以發現在 JASS 中觸發器也是分成這三個部分，只是多了一個負責 InitTrigger 的部分。"></a>相信開始接觸 Jass 代表你對觸發器已經有基本的概念，觸發器在 GUI 中主要分為三個部分 事件、條件、動作，在編輯-&gt;轉化為自訂義腳本中可以發現在 JASS 中觸發器也是分成這三個部分，只是多了一個負責 InitTrigger 的部分。</h3><h3 id="使用-GUI-創建新的觸發實際上執行的工作是這些"><a href="#使用-GUI-創建新的觸發實際上執行的工作是這些" class="headerlink" title="使用 GUI 創建新的觸發實際上執行的工作是這些"></a>使用 GUI 創建新的觸發實際上執行的工作是這些</h3><ol>
<li>新增初始化 function ，在裡面創建新的觸發器(trigger)註冊條件(condition function)、動作(function)、事件(event)，分別是 TriggerAddCondition(trigName, Condition(function funcName) )，TriggerAddAction(trigName,function ActionFuncName)，TriggerRegisterEventFunction</li>
<li>新增條件，動作函數(function)名稱是 Trig_你的觸發器名稱_Action\Condition</li>
<li>放到 Jass 腳本中最底下 Init 中呼叫初始化，這邊有個重點 Jass 是自上而下逐行執行的所以放在上面的函數是讀不到下面的函數的</li>
</ol>
<blockquote>
<p>註冊是不用照順序的你要先註冊動作還是事件條件都可以</p>
</blockquote>
<h3 id="這是觸發做的回復魔力技能"><a href="#這是觸發做的回復魔力技能" class="headerlink" title="這是觸發做的回復魔力技能"></a>這是觸發做的回復魔力技能</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function Trig_MeditationConditions takes nothing returns boolean</span><br><span class="line">  return ((GetSpellAbilityId() == &#x27;A011&#x27;))</span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line">function Trig_MeditationActions takes nothing returns nothing</span><br><span class="line">  local unit u = GetSpellAbilityUnit()</span><br><span class="line">  local integer level = GetUnitAbilityLevel(u, &#x27;A011&#x27;)</span><br><span class="line">  local real maxMana = GetUnitStateSwap(UNIT_STATE_MAX_MANA, u)</span><br><span class="line">  local real Mana = GetUnitStateSwap(UNIT_STATE_MANA, u)</span><br><span class="line">  local real recoverMana = Mana + maxMana *(0.2 +(0.05 * level))</span><br><span class="line"></span><br><span class="line">  call SetUnitManaBJ( u, recoverMana )</span><br><span class="line">  set u = null</span><br><span class="line"></span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line">//===========================================================================</span><br><span class="line">function InitTrig_Meditation takes nothing returns nothing</span><br><span class="line">  set gg_trg_Meditation = CreateTrigger()</span><br><span class="line"></span><br><span class="line">  call TriggerRegisterAnyUnitEventBJ( gg_trg_Meditation, EVENT_PLAYER_UNIT_SPELL_EFFECT )</span><br><span class="line">  call TriggerAddCondition(gg_trg_Meditation, Condition(function Trig_MeditationConditions))</span><br><span class="line">  call TriggerAddAction(gg_trg_Meditation, function Trig_MeditationActions)</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>WE</tag>
        <tag>JASS</tag>
      </tags>
  </entry>
  <entry>
    <title>Asp.Net UpdatePanel筆記</title>
    <url>/2023/05/25/AspNet-UpdatePanel-%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h1 id="UpdatePanel"><a href="#UpdatePanel" class="headerlink" title="UpdatePanel"></a>UpdatePanel</h1><h4 id="UpdatePanel-是-Asp-net-WebForm-的一個控件，功能是讓區塊內的元素能實現-ajax-讓-post-時不再刷新整個頁面只單獨更新區塊內的控件，使用方式"><a href="#UpdatePanel-是-Asp-net-WebForm-的一個控件，功能是讓區塊內的元素能實現-ajax-讓-post-時不再刷新整個頁面只單獨更新區塊內的控件，使用方式" class="headerlink" title="UpdatePanel 是 Asp.net WebForm 的一個控件，功能是讓區塊內的元素能實現 ajax 讓 post 時不再刷新整個頁面只單獨更新區塊內的控件，使用方式"></a>UpdatePanel 是 Asp.net WebForm 的一個控件，功能是讓區塊內的元素能實現 ajax 讓 post 時不再刷新整個頁面只單獨更新區塊內的控件，使用方式</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;asp:UpdatePanel id=&quot;controlID&quot; runat=&quot;server&quot; UpdateMode=&quot;Always&quot; class=&quot;&quot;&gt;</span><br><span class="line">       &lt;ContentTemplate&gt;</span><br><span class="line">           //需要更新的物件放在這</span><br><span class="line">       &lt;/ContentTemplate&gt;</span><br><span class="line">       &lt;Triggers&gt;</span><br><span class="line">          //監聽的控件事件，事件觸發時會呼叫UpdatePanel的更新方法對Panel做更新</span><br><span class="line">          &lt;asp:AsyncPostBackTrigger ControlID=&quot;controlID&quot; EventName=&quot;eventName&quot; /&gt;</span><br><span class="line">       &lt;/Triggers&gt;</span><br><span class="line"> &lt;/asp:UpdatePanel&gt;</span><br></pre></td></tr></table></figure>

<h5 id="UpdatePanel-能獲取內部第一層的元素，如果使用-ItemListView-這種底下又有-Template-的控件，那必須-ItemTemplate-中再套一層-UpdatePanel"><a href="#UpdatePanel-能獲取內部第一層的元素，如果使用-ItemListView-這種底下又有-Template-的控件，那必須-ItemTemplate-中再套一層-UpdatePanel" class="headerlink" title="UpdatePanel 能獲取內部第一層的元素，如果使用 ItemListView 這種底下又有 Template 的控件，那必須 ItemTemplate 中再套一層 UpdatePanel"></a>UpdatePanel 能獲取內部第一層的元素，如果使用 ItemListView 這種底下又有 Template 的控件，那必須 ItemTemplate 中再套一層 UpdatePanel</h5>]]></content>
      <tags>
        <tag>ASP.Net</tag>
      </tags>
  </entry>
  <entry>
    <title>JsonConvert.DeserializeObject()的空字串遺失字串處理</title>
    <url>/2023/06/06/JsonConvert-DeserializeObject-%E7%A9%BA%E5%AD%97%E4%B8%B2%E9%81%BA%E5%A4%B1%E5%AD%97%E4%B8%B2%E8%99%95%E7%90%86/</url>
    <content><![CDATA[<h1 id="設定-JsonSerializerSettings"><a href="#設定-JsonSerializerSettings" class="headerlink" title="設定 JsonSerializerSettings"></a>設定 JsonSerializerSettings</h1><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> settings = <span class="keyword">new</span> JsonSerializerSettings</span><br><span class="line">     &#123;</span><br><span class="line">         NullValueHandling = NullValueHandling.Ignore,</span><br><span class="line">         MissingMemberHandling = MissingMemberHandling.Ignore</span><br><span class="line">     &#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>MAUI學習筆記</title>
    <url>/2023/06/29/MAUI%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><p>需要使用C#開發APP</p>
<h1 id="進度"><a href="#進度" class="headerlink" title="進度"></a>進度</h1><p>經過資料蒐集跟同事討論還有使用，這是一個不穩定的工具在github上還有大量錯誤還沒有解決，並且微軟對這項工具的態度還有社群讓我對Xamarin、MAUI非常沒有信心，因此會減少投入在這項工具的時間，如果可以希望上面能考慮使用Flutter，ReactNative等已經發展一段時間的工具甚至是直接開發原生APP，我相信都好過在不穩定且錯誤無法得到解決方法更新緩慢的工具上開發</p>
<h1 id="施工中…"><a href="#施工中…" class="headerlink" title="施工中…"></a>施工中…</h1>]]></content>
      <tags>
        <tag>C#</tag>
        <tag>MAUI</tag>
        <tag>跨平台開發</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL優化</title>
    <url>/2023/06/06/SQL%E5%84%AA%E5%8C%96/</url>
    <content><![CDATA[<h1 id="SQL-Server-事件監視器"><a href="#SQL-Server-事件監視器" class="headerlink" title="SQL Server 事件監視器"></a>SQL Server 事件監視器</h1><h3 id="開啟位置-工具-gt-SQL-Server-Profiler"><a href="#開啟位置-工具-gt-SQL-Server-Profiler" class="headerlink" title="開啟位置 [工具]-&gt;SQL Server Profiler"></a>開啟位置 [工具]-&gt;SQL Server Profiler</h3><h4 id="SQL-Server-Profiler-是一個很有用的工具，可以看-SQL-在執行時實際在發生哪些事情"><a href="#SQL-Server-Profiler-是一個很有用的工具，可以看-SQL-在執行時實際在發生哪些事情" class="headerlink" title="SQL Server Profiler 是一個很有用的工具，可以看 SQL 在執行時實際在發生哪些事情"></a>SQL Server Profiler 是一個很有用的工具，可以看 SQL 在執行時實際在發生哪些事情</h4><h4 id="還有查看-TSQL-在執行時的樣子，可以找出一些不好找到的錯誤還有追蹤效能"><a href="#還有查看-TSQL-在執行時的樣子，可以找出一些不好找到的錯誤還有追蹤效能" class="headerlink" title="還有查看 TSQL 在執行時的樣子，可以找出一些不好找到的錯誤還有追蹤效能"></a>還有查看 TSQL 在執行時的樣子，可以找出一些不好找到的錯誤還有追蹤效能</h4><h1 id="SQL-Server-執行計畫-用戶端統計資料"><a href="#SQL-Server-執行計畫-用戶端統計資料" class="headerlink" title="SQL Server 執行計畫 用戶端統計資料"></a>SQL Server 執行計畫 用戶端統計資料</h1><h3 id="開啟位置-查詢-gt-包括用戶端統計資料-x2F-包括實際執行計畫"><a href="#開啟位置-查詢-gt-包括用戶端統計資料-x2F-包括實際執行計畫" class="headerlink" title="開啟位置 [查詢] -&gt; 包括用戶端統計資料 &#x2F; 包括實際執行計畫"></a>開啟位置 [查詢] -&gt; 包括用戶端統計資料 &#x2F; 包括實際執行計畫</h3><h4 id="可以看到-SQL-執行每段查詢時的效能還有用戶端使用時間"><a href="#可以看到-SQL-執行每段查詢時的效能還有用戶端使用時間" class="headerlink" title="可以看到 SQL 執行每段查詢時的效能還有用戶端使用時間"></a>可以看到 SQL 執行每段查詢時的效能還有用戶端使用時間</h4><h1 id="用-UNION-ALL-取代大量-OR"><a href="#用-UNION-ALL-取代大量-OR" class="headerlink" title="用 UNION ALL 取代大量 OR"></a>用 UNION ALL 取代大量 OR</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">            <span class="comment">--未修改前 執行時間為 12秒 CPU使用率100%</span></span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreMemberJoin</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreMemberLeftJoin</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreMember</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempBlacklist</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreBlacklist</span><br><span class="line"></span><br><span class="line">            <span class="comment">--建立 PreMember暫存Table</span></span><br><span class="line">            <span class="keyword">SELECT</span> pmcu.<span class="operator">*</span> , cdcu.DEPT_Boss</span><br><span class="line">            <span class="keyword">INTO</span> #TempPreMember</span><br><span class="line">            <span class="keyword">FROM</span> (</span><br><span class="line">            (<span class="keyword">SELECT</span> cu.EP_DeptSno , cu.EP_CName , pm.<span class="operator">*</span></span><br><span class="line">             <span class="keyword">FROM</span> CM_Pre_Member pm <span class="keyword">JOIN</span> CP_User cu <span class="keyword">ON</span> PM.EP_Id <span class="operator">=</span> cu.EP_Id) <span class="keyword">AS</span> pmcu <span class="keyword">JOIN</span></span><br><span class="line">            (<span class="keyword">SELECT</span> DEPT_Sno , DEPT_Boss <span class="keyword">FROM</span> CP_Dept cd ) <span class="keyword">AS</span> cdcu <span class="keyword">ON</span> pmcu.EP_DeptSno <span class="operator">=</span> cdcu.DEPT_Sno</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            <span class="comment">--使用於Blacklist用</span></span><br><span class="line">            <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">            <span class="keyword">INTO</span> #TempPreMemberJoin</span><br><span class="line">            <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> TPM.<span class="operator">*</span> <span class="keyword">FROM</span> #TempPreMember TPM <span class="keyword">JOIN</span> CP_User cu <span class="keyword">ON</span> TPM.DEPT_Boss <span class="operator">=</span> cu.EP_Id) <span class="keyword">AS</span> temp</span><br><span class="line"></span><br><span class="line">            <span class="comment">--使用於Select準會員</span></span><br><span class="line">            <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">            <span class="keyword">INTO</span> #TempPreMemberLeftJoin</span><br><span class="line">            <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> TPM.<span class="operator">*</span> , cu.EP_Id <span class="keyword">AS</span> BossID , cu.EP_CName <span class="keyword">AS</span> BossName <span class="keyword">FROM</span> #TempPreMember TPM <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> CP_User cu <span class="keyword">ON</span> TPM.DEPT_Boss <span class="operator">=</span> cu.EP_Id) <span class="keyword">AS</span> temp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">--建立 Blacklist暫存Table</span></span><br><span class="line">            <span class="keyword">SELECT</span> AutoNo , CName ,</span><br><span class="line">            <span class="keyword">CASE</span> <span class="keyword">WHEN</span> Tel1 <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> Tel1 <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">THEN</span> <span class="keyword">NULL</span> <span class="keyword">ELSE</span> Replace(Tel1,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">END</span> <span class="keyword">AS</span> PM_Tel1 ,</span><br><span class="line">            <span class="keyword">CASE</span> <span class="keyword">WHEN</span> Tel2 <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> Tel2 <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">THEN</span> <span class="keyword">NULL</span> <span class="keyword">ELSE</span> Replace(Tel2,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">END</span> <span class="keyword">AS</span> PM_Tel2 ,</span><br><span class="line">            <span class="keyword">CASE</span> <span class="keyword">WHEN</span> Tel3 <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> Tel3 <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">THEN</span> <span class="keyword">NULL</span> <span class="keyword">ELSE</span> Replace(Tel3,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">END</span> <span class="keyword">AS</span> PM_Tel3</span><br><span class="line">            <span class="keyword">INTO</span> #TempBlacklist</span><br><span class="line">            <span class="keyword">FROM</span> ESIC_ERP.dbo.Blacklist <span class="keyword">WHERE</span> Tel1 <span class="operator">&lt;&gt;</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> Tel2 <span class="operator">&lt;&gt;</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> Tel3 <span class="operator">&lt;&gt;</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 這段花費88%時間處理，一半時間在處理or巢狀迴圈另一半在處理 插入暫存表#TempPreBlacklist</span></span><br><span class="line">            <span class="comment">--建立BlackList內層 用於區分是否為黑名單成員</span></span><br><span class="line">            <span class="comment">--SELECT TB.AutoNo , TB.CName , TPMJ.PM_Sno , TPMJ.EP_CName</span></span><br><span class="line">            <span class="keyword">SELECT</span> TPMJ.<span class="operator">*</span> , TB.AutoNo , TB.CName , TB.PM_Tel1 <span class="keyword">AS</span> T1 , TB.PM_Tel2 <span class="keyword">AS</span> T2 , TB.PM_Tel3 <span class="keyword">AS</span> T3</span><br><span class="line">            <span class="keyword">INTO</span> #TempPreBlacklist</span><br><span class="line">            <span class="keyword">FROM</span> #TempPreMemberJoin TPMJ <span class="keyword">JOIN</span> #TempBlacklist TB</span><br><span class="line">            <span class="keyword">ON</span> TPMJ.EP_CName <span class="operator">=</span> TB.CName <span class="keyword">OR</span></span><br><span class="line">            TPMJ.PM_Tel1 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Tel2 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Tel3 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Tel4 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Tel5 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Tel6 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span></span><br><span class="line">            TPMJ.PM_Tel7 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Tel8 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Fax1 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Fax2 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Mobile1 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span> TPMJ.PM_Mobile2 <span class="operator">=</span> TB.PM_Tel1 <span class="keyword">OR</span></span><br><span class="line">            TPMJ.PM_Tel1 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Tel2 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Tel3 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Tel4 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Tel5 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Tel6 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span></span><br><span class="line">            TPMJ.PM_Tel7 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Tel8 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Fax1 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Fax2 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Mobile1 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span> TPMJ.PM_Mobile2 <span class="operator">=</span> TB.PM_Tel2 <span class="keyword">OR</span></span><br><span class="line">            TPMJ.PM_Tel1 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Tel2 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Tel3 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Tel4 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Tel5 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Tel6 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span></span><br><span class="line">            TPMJ.PM_Tel7 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Tel8 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Fax1 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Fax2 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Mobile1 <span class="operator">=</span> TB.PM_Tel3 <span class="keyword">OR</span> TPMJ.PM_Mobile2 <span class="operator">=</span> TB.PM_Tel3</span><br><span class="line"></span><br><span class="line">            <span class="comment">--計算數量</span></span><br><span class="line">            <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> DataCount</span><br><span class="line">            <span class="keyword">FROM</span> #TempPreMemberLeftJoin <span class="keyword">AS</span> TPMLJ</span><br><span class="line">            <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> TPB.PM_Sno , TPB.EP_CName , <span class="string">&#x27;黑名單&#x27;</span> <span class="keyword">AS</span> bk_list <span class="keyword">FROM</span> CM_Pre_Member pm</span><br><span class="line">            			<span class="keyword">INNER</span> <span class="keyword">JOIN</span> #TempPreBlacklist <span class="keyword">AS</span> TPB</span><br><span class="line">            			<span class="keyword">ON</span> TPB.PM_Sno <span class="operator">=</span> pm.PM_Sno) <span class="keyword">AS</span> TempTable</span><br><span class="line">            <span class="keyword">ON</span> TPMLJ.PM_Sno <span class="operator">=</span> TempTable.PM_Sno <span class="keyword">WHERE</span> TPMLJ.PM_IsOk <span class="operator">=</span> <span class="string">&#x27;Y&#x27;</span> &#123;whereSb&#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">--條列出每個內容</span></span><br><span class="line">            <span class="keyword">SELECT</span> TPMLJ.<span class="operator">*</span> , bk_list , <span class="keyword">CASE</span> <span class="keyword">WHEN</span> TPMLJ.BossID <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> TPMLJ.BossID <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;(無主管資料)&#x27;</span> <span class="keyword">ELSE</span> TPMLJ.BossName <span class="keyword">END</span> bkcname</span><br><span class="line">            <span class="keyword">FROM</span> #TempPreMemberLeftJoin <span class="keyword">AS</span> TPMLJ</span><br><span class="line">            <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> TPB.PM_Sno , TPB.EP_CName , <span class="string">&#x27;黑名單&#x27;</span> <span class="keyword">AS</span> bk_list <span class="keyword">FROM</span> CM_Pre_Member pm</span><br><span class="line">            			<span class="keyword">INNER</span> <span class="keyword">JOIN</span> #TempPreBlacklist <span class="keyword">AS</span> TPB</span><br><span class="line">            			<span class="keyword">ON</span> TPB.PM_Sno <span class="operator">=</span> pm.PM_Sno) <span class="keyword">AS</span> TempTable</span><br><span class="line">            <span class="keyword">ON</span> TPMLJ.PM_Sno <span class="operator">=</span> TempTable.PM_Sno <span class="keyword">WHERE</span> TPMLJ.PM_IsOk <span class="operator">=</span> <span class="string">&#x27;Y&#x27;</span> &#123;whereSb&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreMemberJoin</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreMemberLeftJoin</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreMember</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempBlacklist</span><br><span class="line">            <span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #TempPreBlacklist</span><br></pre></td></tr></table></figure>

<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--使用union all 取代每個or後 巢狀迴圈消失 執行時間縮短為4秒</span></span><br><span class="line">       <span class="comment">--再來能明顯增加速度優化方向為不使用暫存表</span></span><br><span class="line">        <span class="keyword">SELECT</span> TPMJ.<span class="operator">*</span> , TB.AutoNo , TB.CName , TB.PM_Tel1 <span class="keyword">AS</span> T1 , TB.PM_Tel2 <span class="keyword">AS</span> T2 , TB.PM_Tel3 <span class="keyword">AS</span> T3</span><br><span class="line">        <span class="keyword">FROM</span> #TempPreMemberJoin TPMJ <span class="keyword">JOIN</span> #TempBlacklist TB</span><br><span class="line">        <span class="keyword">ON</span> TPMJ.PM_Fax1 <span class="operator">=</span> TB.PM_Tel1</span><br><span class="line"> <span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"> <span class="keyword">SELECT</span> TPMJ.<span class="operator">*</span> , TB.AutoNo , TB.CName , TB.PM_Tel1 <span class="keyword">AS</span> T1 , TB.PM_Tel2 <span class="keyword">AS</span> T2 , TB.PM_Tel3 <span class="keyword">AS</span> T3</span><br><span class="line">        <span class="keyword">FROM</span> #TempPreMemberJoin TPMJ <span class="keyword">JOIN</span> #TempBlacklist TB</span><br><span class="line">        <span class="keyword">ON</span> TPMJ.PM_Fax2 <span class="operator">=</span> TB.PM_Tel1</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>TSQL SQL SqlServer</tag>
      </tags>
  </entry>
  <entry>
    <title>C#使用Post</title>
    <url>/2023/05/23/C-%E4%BD%BF%E7%94%A8Post/</url>
    <content><![CDATA[<h1 id="POST-API"><a href="#POST-API" class="headerlink" title="POST API"></a>POST API</h1><pre><code>    public TResponseModel HttpPost&lt;TRequestModel, TResponseModel&gt;(string url, TRequestModel body)
    &#123;
        string postBody = JsonConvert.SerializeObject(body);

        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);

        request.Method = &quot;POST&quot;;

        request.ContentType = &quot;application/json&quot;;

        using (var streamWriter = new StreamWriter(request.GetRequestStream()))

        &#123;

            streamWriter.Write(postBody);

        &#125;

        //發出Request

        var httpResponse = (HttpWebResponse)request.GetResponse();

        var streamReader = new StreamReader(httpResponse.GetResponseStream());

        var result = streamReader.ReadToEnd();

        TResponseModel res = JsonConvert.DeserializeObject&lt;TResponseModel&gt;(result);

        return res;

    &#125;
</code></pre>
]]></content>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>VisualStudio好用快捷鍵</title>
    <url>/2023/06/30/VisualStudio%E5%A5%BD%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%8D%B5/</url>
    <content><![CDATA[<h1 id="提取方法重構"><a href="#提取方法重構" class="headerlink" title="提取方法重構"></a>提取方法重構</h1><p><strong>功能:</strong> 將程式片段轉為方法</p>
<p><strong>快捷鍵:</strong> “Ctrl+R”+“Ctrl+M”</p>
<h1 id="多重選取"><a href="#多重選取" class="headerlink" title="多重選取"></a>多重選取</h1><ul>
<li>Ctrl+ Alt+ 單擊：添加輔助插入符</li>
<li>Ctrl+ Alt+ 雙擊：添加輔助單詞選擇</li>
<li>Ctrl+ Alt+ 單擊 + 拖動：添加輔助選擇</li>
<li>Shift+ Alt+ .：添加下一個匹配文本作為選擇</li>
<li>Shift+ Alt+ ;: 添加所有匹配的文本作為選擇</li>
<li>Shift+ Alt+ ,: 刪除最後選定的事件</li>
<li>Shift+ Alt+ &#x2F;: 跳過下一個匹配的出現</li>
<li>Alt+ 單擊：添加框選擇</li>
<li>Esc 或單擊：清除所有選擇</li>
</ul>
]]></content>
      <tags>
        <tag>VisualStudio</tag>
      </tags>
  </entry>
  <entry>
    <title>ASP筆記</title>
    <url>/2023/06/16/ASP%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><h3 id="紀錄使用ASP的心得"><a href="#紀錄使用ASP的心得" class="headerlink" title="紀錄使用ASP的心得"></a>紀錄使用ASP的心得</h3>]]></content>
      <tags>
        <tag>ASP.NET</tag>
        <tag>ASP.NET_WebFrom</tag>
        <tag>ASP.NET_MVC</tag>
      </tags>
  </entry>
  <entry>
    <title>c#去除HtmlTag</title>
    <url>/2023/05/26/c-%E5%8E%BB%E9%99%A4HtmlTag/</url>
    <content><![CDATA[<h1 id="使用正則表達式-RegularExpression"><a href="#使用正則表達式-RegularExpression" class="headerlink" title="使用正則表達式 RegularExpression"></a>使用正則表達式 RegularExpression</h1><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">StripHTML</span>(<span class="params"><span class="built_in">string</span> input</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> Regex.Replace(input, <span class="string">&quot;&lt;[a-zA-Z/].*?&gt;&quot;</span>, String.Empty);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Animation30 Day1</title>
    <url>/2020/09/18/css-30-Day1/</url>
    <content><![CDATA[<h2 id="用到了"><a href="#用到了" class="headerlink" title="用到了"></a>用到了</h2><ul>
<li>TweenMaxTweenMax</li>
<li>TimelineMax</li>
<li><del>ScrollMagicScrollMagic</del> (有更好的被取代了)</li>
<li>GSAP</li>
</ul>
<h2 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h2><h6 id="最近突然覺得自己炫泡動畫功力真的該加強一下了，之前都不怎麼在意外觀只想要把功能弄出來-外觀能看就好-，不過還是該學一下怎麼弄複雜的動畫還有視覺設計"><a href="#最近突然覺得自己炫泡動畫功力真的該加強一下了，之前都不怎麼在意外觀只想要把功能弄出來-外觀能看就好-，不過還是該學一下怎麼弄複雜的動畫還有視覺設計" class="headerlink" title="最近突然覺得自己炫泡動畫功力真的該加強一下了，之前都不怎麼在意外觀只想要把功能弄出來 外觀能看就好 ，不過還是該學一下怎麼弄複雜的動畫還有視覺設計"></a>最近突然覺得自己炫泡動畫功力真的該加強一下了，之前都不怎麼在意外觀只想要把功能弄出來 外觀能看就好 ，不過還是該學一下怎麼弄複雜的動畫還有視覺設計</h6><h1 id="GreenSock"><a href="#GreenSock" class="headerlink" title="GreenSock"></a>GreenSock</h1><h6 id="這個真的非常好用，用了這個不用再管關鍵貞還有時間線可以專心在設計動畫，而且還有-Scroll-Trigger-，這是最近出的功能之前都還要搭配另一個叫-Scroll-Magic-的套件，總之非常推"><a href="#這個真的非常好用，用了這個不用再管關鍵貞還有時間線可以專心在設計動畫，而且還有-Scroll-Trigger-，這是最近出的功能之前都還要搭配另一個叫-Scroll-Magic-的套件，總之非常推" class="headerlink" title="這個真的非常好用，用了這個不用再管關鍵貞還有時間線可以專心在設計動畫，而且還有 Scroll Trigger ，這是最近出的功能之前都還要搭配另一個叫 Scroll Magic 的套件，總之非常推"></a>這個真的非常好用，用了這個不用再管關鍵貞還有時間線可以專心在設計動畫，而且還有 Scroll Trigger ，這是最近出的功能之前都還要搭配另一個叫 Scroll Magic 的套件，總之非常推</h6><h4 id="只需要使用-cdn-體驗一下就知道有多簡單"><a href="#只需要使用-cdn-體驗一下就知道有多簡單" class="headerlink" title="只需要使用 cdn 體驗一下就知道有多簡單"></a>只需要使用 cdn 體驗一下就知道有多簡單</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/ScrollTrigger.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><h6 id="官網提供最簡單的範例"><a href="#官網提供最簡單的範例" class="headerlink" title="官網提供最簡單的範例"></a>官網提供最簡單的範例</h6><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//當box進入到畫面的時候往右邊滑</span></span><br><span class="line"></span><br><span class="line">gsap.to(<span class="string">&#x27;#box&#x27;</span>,&#123;x:<span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure>

<h6 id="比較進階-可以自己設定很多屬性"><a href="#比較進階-可以自己設定很多屬性" class="headerlink" title="比較進階 可以自己設定很多屬性"></a>比較進階 可以自己設定很多屬性</h6><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 設定觸發元件還有觸發位置，其他還提供非常多屬性可以設定 功能很多</span></span><br><span class="line"><span class="keyword">let</span> tl = gsap.timeline(&#123;scrollTrigger:&#123;</span><br><span class="line">trigger:<span class="string">&quot;#div&quot;</span>,</span><br><span class="line">start:<span class="string">&#x27;top top&#x27;</span>,</span><br><span class="line">scrub:<span class="number">1</span></span><br><span class="line"></span><br><span class="line">&#125;&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//從右側滑回來</span></span><br><span class="line">tl.form(<span class="string">&#x27;.box&#x27;</span>,&#123;x:<span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><h6 id="一下就能上手感覺還有很多花樣可以研究，明天繼續"><a href="#一下就能上手感覺還有很多花樣可以研究，明天繼續" class="headerlink" title="一下就能上手感覺還有很多花樣可以研究，明天繼續!"></a>一下就能上手感覺還有很多花樣可以研究，明天繼續!</h6>]]></content>
      <tags>
        <tag>css</tag>
        <tag>animation</tag>
      </tags>
  </entry>
  <entry>
    <title>React + Firebase 即時聊天系統</title>
    <url>/2023/06/09/firebase%20IM/</url>
    <content><![CDATA[<h2 id="使用的有"><a href="#使用的有" class="headerlink" title="使用的有"></a>使用的有</h2><ul>
<li>FireBase realtime database , functions , Cloud FireStore</li>
<li>Post man</li>
<li>node 8 (因為免費專案只能用 node 8 更高的版本要升級帳戶才能使用 cloude function，node 8 只支援到 2021 年)</li>
<li>express</li>
</ul>
<h6 id="一開始是用-react-native-做因為這原本是某個案子的-demo-有簽保密協議只好重寫成網頁版，網頁版正在慢慢補上所以先講-firebase-的部分就好，"><a href="#一開始是用-react-native-做因為這原本是某個案子的-demo-有簽保密協議只好重寫成網頁版，網頁版正在慢慢補上所以先講-firebase-的部分就好，" class="headerlink" title="一開始是用 react native 做因為這原本是某個案子的 demo 有簽保密協議只好重寫成網頁版，網頁版正在慢慢補上所以先講 firebase 的部分就好，"></a>一開始是用 react native 做因為這原本是某個案子的 demo 有簽保密協議只好重寫成網頁版，網頁版正在慢慢補上所以先講 firebase 的部分就好，</h6><h6 id="firebase-在設計資料結構的時候要注意"><a href="#firebase-在設計資料結構的時候要注意" class="headerlink" title="firebase 在設計資料結構的時候要注意"></a>firebase 在設計資料結構的時候要注意</h6><ul>
<li>結構不能太深 ，平面化</li>
<li>鍵值沒指定的話都是自動產生的亂數 document id，你要自己在文件內搞一個 id 來撈你要的資料 比如 uid，在建立使用者的時候會建立的一個獨一無二字串來把各個集合內的資料串起來</li>
</ul>
<h2 id="Storage-的資料設計差不多是這樣"><a href="#Storage-的資料設計差不多是這樣" class="headerlink" title="Storage 的資料設計差不多是這樣"></a>Storage 的資料設計差不多是這樣</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;userHandle&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">    userID<span class="punctuation">:</span> <span class="string">&quot;uid&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="attr">&quot;roomID&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">     ...</span><br><span class="line">     member<span class="punctuation">:</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">:</span>uid <span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">:</span>uid<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="在建立使用者之後會在-user-collection-裡面建立-user-資料，裡面會儲存使用者的資訊比如大頭貼，email-等等"><a href="#在建立使用者之後會在-user-collection-裡面建立-user-資料，裡面會儲存使用者的資訊比如大頭貼，email-等等" class="headerlink" title="在建立使用者之後會在 user collection 裡面建立 user 資料，裡面會儲存使用者的資訊比如大頭貼，email 等等"></a>在建立使用者之後會在 user collection 裡面建立 user 資料，裡面會儲存使用者的資訊比如大頭貼，email 等等</h6><h6 id="roomID-是建立聊天室之後回傳的-doc-ID，然後-room-裡面的-member-陣列記錄聊天室內人的-uid，"><a href="#roomID-是建立聊天室之後回傳的-doc-ID，然後-room-裡面的-member-陣列記錄聊天室內人的-uid，" class="headerlink" title="roomID 是建立聊天室之後回傳的 doc ID，然後 room 裡面的 member 陣列記錄聊天室內人的 uid，"></a>roomID 是建立聊天室之後回傳的 doc ID，然後 room 裡面的 member 陣列記錄聊天室內人的 uid，</h6><h6 id="後端-api-只需要有-uid-就可以撈出這些資料，整理一下丟回去"><a href="#後端-api-只需要有-uid-就可以撈出這些資料，整理一下丟回去" class="headerlink" title="後端 api 只需要有 uid 就可以撈出這些資料，整理一下丟回去"></a>後端 api 只需要有 uid 就可以撈出這些資料，整理一下丟回去</h6><p>……後續慢慢補上先完成 web 板好了</p>
]]></content>
      <categories>
        <category>React</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>firebase</tag>
      </tags>
  </entry>
  <entry>
    <title>SqlServer筆記</title>
    <url>/2023/06/20/SqlServer%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><h3 id="紀錄遇到的問題和解決方法，加深記憶"><a href="#紀錄遇到的問題和解決方法，加深記憶" class="headerlink" title="紀錄遇到的問題和解決方法，加深記憶"></a>紀錄遇到的問題和解決方法，加深記憶</h3><h1 id="使用TempTable"><a href="#使用TempTable" class="headerlink" title="使用TempTable"></a>使用TempTable</h1><h5 id="使用select-into-table-name-會建立新的暫存表，使用前要確認暫存表還在不在，在的話要記得刪掉不然會錯，使用完要記得刪掉"><a href="#使用select-into-table-name-會建立新的暫存表，使用前要確認暫存表還在不在，在的話要記得刪掉不然會錯，使用完要記得刪掉" class="headerlink" title="使用select into [table_name]會建立新的暫存表，使用前要確認暫存表還在不在，在的話要記得刪掉不然會錯，使用完要記得刪掉"></a>使用select into [table_name]會建立新的暫存表，使用前要確認暫存表還在不在，在的話要記得刪掉不然會錯，使用完要記得刪掉</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #[<span class="keyword">table</span><span class="operator">-</span>name]</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> column1, column2, column3, ... <span class="keyword">as</span> [name]</span><br><span class="line"><span class="keyword">into</span> #[tablename]</span><br><span class="line"><span class="keyword">from</span> [<span class="keyword">table</span>] [簡稱]</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> #[<span class="keyword">table</span><span class="operator">-</span>name]</span><br></pre></td></tr></table></figure>

<h1 id="合併沒共通鍵的表"><a href="#合併沒共通鍵的表" class="headerlink" title="合併沒共通鍵的表"></a>合併沒共通鍵的表</h1><h3 id="使用cross-join或者join-on-1-x3D-1都可以，建議使用cross-join語意上會直觀很多"><a href="#使用cross-join或者join-on-1-x3D-1都可以，建議使用cross-join語意上會直觀很多" class="headerlink" title="使用cross join或者join on 1&#x3D;1都可以，建議使用cross join語意上會直觀很多"></a>使用cross join或者join on 1&#x3D;1都可以，建議使用cross join語意上會直觀很多</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> #temp1 <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> #temp2,#temp3</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SQlServer</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode_26 RemoveDuplicates</title>
    <url>/2023/06/29/leetcode-26/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Solution</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">RemoveDuplicates</span>(<span class="params"><span class="built_in">int</span>[] nums</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">int</span> uniqueCount =  nums.Distinct().Count(); <span class="comment">//不重複數量</span></span><br><span class="line">            <span class="built_in">int</span>[] uniqueNumbers = <span class="keyword">new</span> <span class="built_in">int</span>[uniqueCount]; <span class="comment">//建立陣列裝不重複數字</span></span><br><span class="line">            Array.Copy( nums.Distinct().ToArray(), uniqueNumbers, uniqueCount);</span><br><span class="line">            <span class="comment">//複製nums的不重複元素至剛剛建立的陣列</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; uniqueNumbers.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                nums[i] = uniqueNumbers[i];<span class="comment">//取代</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> uniqueCount;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因為題目說前面開頭k個數字跟他需要的數字一樣就可以所以不用多餘的數字</p>
]]></content>
      <tags>
        <tag>C#</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>正在研究和準備研究的工具</title>
    <url>/2020/09/24/tools/</url>
    <content><![CDATA[<h1 id="前端框架"><a href="#前端框架" class="headerlink" title="前端框架"></a>前端框架</h1><ul>
<li><a href="">React.js</a></li>
<li>Vue.js</li>
<li>Svelte</li>
</ul>
<h1 id="圖形"><a href="#圖形" class="headerlink" title="圖形"></a>圖形</h1><ul>
<li><a href="https://cooltext.com/https://cooltext.com/">cooltext</a></li>
<li><a href="https://vectorjs.org/">vectorjs</a></li>
</ul>
<h1 id="node"><a href="#node" class="headerlink" title="node"></a>node</h1><ul>
<li><a href="https://nwjs.io/">nwjs</a></li>
</ul>
<h1 id="動畫"><a href="#動畫" class="headerlink" title="動畫"></a>動畫</h1><ul>
<li><a href="">PIXI.js</a></li>
<li><a href="https://github.com/kittykatattack/hexi">HEXI.js</a></li>
<li><a href="https://matthew.wagerfield.com/parallax/">視差</a></li>
<li><a href="https://greensock.com/gsap/">gsap</a></li>
<li><a href="https://threejs.org/">tree.js</a></li>
</ul>
<h1 id="音效"><a href="#音效" class="headerlink" title="音效"></a>音效</h1><ul>
<li><a href="https://www.bfxr.net/">bfxr</a></li>
</ul>
<h1 id="遊戲素材"><a href="#遊戲素材" class="headerlink" title="遊戲素材"></a>遊戲素材</h1><ul>
<li><a href="https://opengameart.org/content/oves-essential-game-audio-pack-collection-160-files-updated">音效合集</a></li>
<li><a href="https://opengameart.org/content/generic-8-bit-jrpg-soundtrack">8bit</a></li>
<li><a href="https://0x72.itch.io/dungeontileset-ii">地牢磁磚</a></li>
</ul>
<h1 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h1><p><a href="https://www.npmjs.com/package/jwt-decode">jwt-decode</a></p>
<p><a href="">day.js</a></p>
<p><a href="">lerna</a></p>
<h1 id="文字編輯器"><a href="#文字編輯器" class="headerlink" title="文字編輯器"></a>文字編輯器</h1><ul>
<li><a href="https://quilljs.com/">quilljs</a></li>
</ul>
<h1 id="遊戲"><a href="#遊戲" class="headerlink" title="遊戲"></a>遊戲</h1><ul>
<li><a href="https://www.mapeditor.org/">Tiled</a> 貼圖編輯器</li>
<li><a href="http://phaser.io/news">phaser</a> 遊戲框架</li>
<li><a href="http://free-tex-packer.com/download/">Free texture packer</a></li>
<li><a href="https://github.com/sporadic-labs/tile-extruder">tile extruder</a> 平滑圖塊邊緣交接處</li>
<li><a href="http://dragonbones.com/cn/animation.html">DragonBones</a> 2d動態貼圖</li>
</ul>
<h1 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h1><ul>
<li>Nightwatch.js</li>
</ul>
]]></content>
      <tags>
        <tag>javaScript lib</tag>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLServer還原DB</title>
    <url>/2023/06/13/SQLServer%E9%82%84%E5%8E%9FDB/</url>
    <content><![CDATA[<h1 id="還原DB"><a href="#還原DB" class="headerlink" title="還原DB"></a>還原DB</h1><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--讀取備份檔案，因為要知道到Data跟Log的名稱 這邊的N代表是Unicode</span></span><br><span class="line">RESTORE FILELISTONLY</span><br><span class="line"><span class="keyword">FROM</span> DISK <span class="operator">=</span> N<span class="string">&#x27;[your.bak PATH]&#x27;</span></span><br><span class="line">go</span><br><span class="line"><span class="comment">--要先創建一個新資料庫還有記得切換到master，還原到正在執行時的資料庫時記得確定沒有東西在使用資料庫不然會跳錯</span></span><br><span class="line">restore database [newDB NAME]</span><br><span class="line"><span class="keyword">from</span> DISK <span class="operator">=</span> N<span class="string">&#x27;[your.bak PATH]&#x27;</span></span><br><span class="line"><span class="keyword">WITH</span>  </span><br><span class="line">move <span class="string">&#x27;[DataFileName]&#x27;</span> <span class="keyword">to</span> <span class="string">&#x27;[newDB_DataFileName.mdf_PATH]&#x27;</span>,</span><br><span class="line">move <span class="string">&#x27;[LogFileName]&#x27;</span> <span class="keyword">to</span> <span class="string">&#x27;[newDB_LogFileName.ldf_PATH]&#x27;</span>,</span><br><span class="line">Replace, Recovery</span><br><span class="line">GO</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>t-sql</tag>
        <tag>SQL</tag>
        <tag>SQLServer</tag>
      </tags>
  </entry>
  <entry>
    <title>WorldEditor常用技巧 1</title>
    <url>/2023/06/13/WorldEditor-%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7-1/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="WorldEditor是魔獸爭霸自帶的地圖編輯器，其功能強大讓魔獸爭霸這款有二十年歷史的遊戲依然活耀。"><a href="#WorldEditor是魔獸爭霸自帶的地圖編輯器，其功能強大讓魔獸爭霸這款有二十年歷史的遊戲依然活耀。" class="headerlink" title="WorldEditor是魔獸爭霸自帶的地圖編輯器，其功能強大讓魔獸爭霸這款有二十年歷史的遊戲依然活耀。"></a>WorldEditor是魔獸爭霸自帶的地圖編輯器，其功能強大讓魔獸爭霸這款有二十年歷史的遊戲依然活耀。</h2><h3 id="會寫這篇是因為中文參考資源日漸稀少，魔獸爭霸中文圈生態近年也是改變很多，中文玩家以及作者、翻譯者都流向中國大型平台，平台支援的各種API也讓地圖不像以前一樣流通，一般版本的編輯器資訊也就變得很稀少並且破碎讓新手難以入門，在這邊整理一些常見的技巧做個紀錄也供大家參考。"><a href="#會寫這篇是因為中文參考資源日漸稀少，魔獸爭霸中文圈生態近年也是改變很多，中文玩家以及作者、翻譯者都流向中國大型平台，平台支援的各種API也讓地圖不像以前一樣流通，一般版本的編輯器資訊也就變得很稀少並且破碎讓新手難以入門，在這邊整理一些常見的技巧做個紀錄也供大家參考。" class="headerlink" title="會寫這篇是因為中文參考資源日漸稀少，魔獸爭霸中文圈生態近年也是改變很多，中文玩家以及作者、翻譯者都流向中國大型平台，平台支援的各種API也讓地圖不像以前一樣流通，一般版本的編輯器資訊也就變得很稀少並且破碎讓新手難以入門，在這邊整理一些常見的技巧做個紀錄也供大家參考。"></a>會寫這篇是因為中文參考資源日漸稀少，魔獸爭霸中文圈生態近年也是改變很多，中文玩家以及作者、翻譯者都流向中國大型平台，平台支援的各種API也讓地圖不像以前一樣流通，一般版本的編輯器資訊也就變得很稀少並且破碎讓新手難以入門，在這邊整理一些常見的技巧做個紀錄也供大家參考。</h3><h1 id="自訂資料"><a href="#自訂資料" class="headerlink" title="自訂資料"></a>自訂資料</h1><h3 id="在單位編輯器中有一個欄位是自訂義資料，可以在裡面放一些數據在編輯器中讀取，可以用hashtable取代"><a href="#在單位編輯器中有一個欄位是自訂義資料，可以在裡面放一些數據在編輯器中讀取，可以用hashtable取代" class="headerlink" title="在單位編輯器中有一個欄位是自訂義資料，可以在裡面放一些數據在編輯器中讀取，可以用hashtable取代"></a>在單位編輯器中有一個欄位是自訂義資料，可以在裡面放一些數據在編輯器中讀取，可以用hashtable取代</h3><h1 id="假人-dummy、馬甲"><a href="#假人-dummy、馬甲" class="headerlink" title="假人(dummy、馬甲)"></a>假人(dummy、馬甲)</h1><h3 id="假人是非常廣泛用到的一種技巧，比如單位重生、自訂義投射物模型、多重施法、科技檢測等都會用到，他本身就只是一個普通單位通常會用苦工當模板並且使用以下設定"><a href="#假人是非常廣泛用到的一種技巧，比如單位重生、自訂義投射物模型、多重施法、科技檢測等都會用到，他本身就只是一個普通單位通常會用苦工當模板並且使用以下設定" class="headerlink" title="假人是非常廣泛用到的一種技巧，比如單位重生、自訂義投射物模型、多重施法、科技檢測等都會用到，他本身就只是一個普通單位通常會用苦工當模板並且使用以下設定"></a>假人是非常廣泛用到的一種技巧，比如單位重生、自訂義投射物模型、多重施法、科技檢測等都會用到，他本身就只是一個普通單位通常會用苦工當模板並且使用以下設定</h3><h4 id="普通技能"><a href="#普通技能" class="headerlink" title="普通技能"></a><strong>普通技能</strong></h4><ul>
<li>中立無敵</li>
<li>蝗蟲</li>
<li>隱形</li>
</ul>
<h4 id="其他設定"><a href="#其他設定" class="headerlink" title="其他設定"></a>其他設定</h4><ul>
<li>移動速度: 0</li>
<li>移動:無</li>
<li>碰撞體積: 0</li>
<li>視野: 0</li>
<li>攻擊: 無</li>
<li>不可逃跑</li>
<li>生命回復: -1</li>
</ul>
<h3 id="實際應用-自訂義投射物"><a href="#實際應用-自訂義投射物" class="headerlink" title="實際應用 自訂義投射物"></a>實際應用 自訂義投射物</h3><h4 id="以下來源是我自己做地圖時寫出來的通用系統全使用Jass，只要設定好都是可以用的，不懂Jass的小夥伴不用擔心之後會寫一篇簡易的入門文章，以下會分兩個觸發器工作分別是設定創建投射物單位、以及讓他往目標移動"><a href="#以下來源是我自己做地圖時寫出來的通用系統全使用Jass，只要設定好都是可以用的，不懂Jass的小夥伴不用擔心之後會寫一篇簡易的入門文章，以下會分兩個觸發器工作分別是設定創建投射物單位、以及讓他往目標移動" class="headerlink" title="以下來源是我自己做地圖時寫出來的通用系統全使用Jass，只要設定好都是可以用的，不懂Jass的小夥伴不用擔心之後會寫一篇簡易的入門文章，以下會分兩個觸發器工作分別是設定創建投射物單位、以及讓他往目標移動"></a>以下來源是我自己做地圖時寫出來的通用系統全使用Jass，只要設定好都是可以用的，不懂Jass的小夥伴不用擔心之後會寫一篇簡易的入門文章，以下會分兩個觸發器工作分別是設定創建投射物單位、以及讓他往目標移動</h4><h3 id="創建單位"><a href="#創建單位" class="headerlink" title="創建單位"></a>創建單位</h3><h4 id="CreateMissilesLoc-投射物擁有玩家、假人單位類型ID、速度、傷害範圍、開始位置、目標位置、拋物線參數、傷害、攻擊類型、傷害類型、目標特效-回傳-單位"><a href="#CreateMissilesLoc-投射物擁有玩家、假人單位類型ID、速度、傷害範圍、開始位置、目標位置、拋物線參數、傷害、攻擊類型、傷害類型、目標特效-回傳-單位" class="headerlink" title="CreateMissilesLoc(投射物擁有玩家、假人單位類型ID、速度、傷害範圍、開始位置、目標位置、拋物線參數、傷害、攻擊類型、傷害類型、目標特效) 回傳 單位"></a>CreateMissilesLoc(投射物擁有玩家、假人單位類型ID、速度、傷害範圍、開始位置、目標位置、拋物線參數、傷害、攻擊類型、傷害類型、目標特效) 回傳 單位</h4><h4 id="這邊的工作很簡單，計算兩點角度還有創造假人然後暫停單位，暫停單位很重要你也不希望單位做出一些你不希望他做的事情，然後關閉移動路徑讓單位移動無視地形，添加德魯伊的變化技能之後移除，整理還有詳細說明一下"><a href="#這邊的工作很簡單，計算兩點角度還有創造假人然後暫停單位，暫停單位很重要你也不希望單位做出一些你不希望他做的事情，然後關閉移動路徑讓單位移動無視地形，添加德魯伊的變化技能之後移除，整理還有詳細說明一下" class="headerlink" title="這邊的工作很簡單，計算兩點角度還有創造假人然後暫停單位，暫停單位很重要你也不希望單位做出一些你不希望他做的事情，然後關閉移動路徑讓單位移動無視地形，添加德魯伊的變化技能之後移除，整理還有詳細說明一下"></a>這邊的工作很簡單，計算兩點角度還有創造假人然後暫停單位，暫停單位很重要你也不希望單位做出一些你不希望他做的事情，然後關閉移動路徑讓單位移動無視地形，添加德魯伊的變化技能之後移除，整理還有詳細說明一下</h4><ol>
<li>AngleBetweenPoints(startLoc, endLoc): 內建的功能函數，會計算兩個點之間的角度回傳是一個180到-180的real數字</li>
<li>CreateUnitAtLoc(player, UnitType, location , faceAngle ):在目標點創造單位，一定會用到的函數至於跟他長得差不多的親戚有什麼不同之後再介紹</li>
<li>PauseUnit(unit, true):暫停單位</li>
<li>UnitAddAbilityBJ( interger ablitedID, unit): 單位添加技能，這邊的重點在’Arav’這是翔風德魯伊變形成烏鴉型態的技能ID，添加這個技能再移除可以讓單位改變飛行高度，是一個BUG但是非常有用也就沒改了</li>
<li>SaveUnitHandle、SaveInterger … :都是儲存值到HashTable</li>
<li>GroupAddUnit(group , unit):　添加單位到單位組</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//==============================================================================</span><br><span class="line">//指向導彈</span><br><span class="line">function CreateMissilesLoc takes player p, unit attacker, integer UnitType, real speed, real radius, location start, location end , real earc , real damage, attacktype type1 , damagetype type2 , string targetLocEffect returns unit</span><br><span class="line"></span><br><span class="line">  local real angle = AngleBetweenPoints(start, end)</span><br><span class="line">  local unit vest = CreateUnitAtLoc(p, UnitType, start , angle )</span><br><span class="line">  local integer handleId = GetHandleId(vest)</span><br><span class="line"></span><br><span class="line">  call PauseUnit(vest, true)</span><br><span class="line">  call SetUnitPathing( vest, false )</span><br><span class="line">  call UnitAddAbilityBJ( &#x27;Arav&#x27;, vest)</span><br><span class="line">  call UnitRemoveAbilityBJ( &#x27;Arav&#x27;, vest)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  //----------------------------------------------------------</span><br><span class="line">  call SaveUnitHandle(Missiles_loc_table, handleId, 0, vest)</span><br><span class="line">  call SaveReal(Missiles_loc_table, handleId, 1, damage)</span><br><span class="line">  call SaveLocationHandle(Missiles_loc_table, handleId, 2, end)</span><br><span class="line">  call SaveUnitHandle(Missiles_loc_table, handleId, 3, attacker)</span><br><span class="line">  call SaveReal(Missiles_loc_table, handleId, 4, earc)</span><br><span class="line">  call SaveReal(Missiles_loc_table, handleId, 5, radius)</span><br><span class="line">  call SaveReal(Missiles_loc_table, handleId, 6, speed)</span><br><span class="line">  call SaveStr(Missiles_loc_table, handleId, 7, targetLocEffect)</span><br><span class="line">  call SaveLocationHandle(Missiles_loc_table, handleId, 8, start)</span><br><span class="line"></span><br><span class="line">  call GroupAddUnit(Missiles_Unit_Group, vest)</span><br><span class="line"> </span><br><span class="line">  return vest</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure>



<h3 id="移動還有命中"><a href="#移動還有命中" class="headerlink" title="移動還有命中"></a>移動還有命中</h3><h4 id="這邊看起來很複雜實際上他只有做一個ForGroup跟投射物到目標後的後續動作，詳細說明一下"><a href="#這邊看起來很複雜實際上他只有做一個ForGroup跟投射物到目標後的後續動作，詳細說明一下" class="headerlink" title="這邊看起來很複雜實際上他只有做一個ForGroup跟投射物到目標後的後續動作，詳細說明一下"></a>這邊看起來很複雜實際上他只有做一個ForGroup跟投射物到目標後的後續動作，詳細說明一下</h4><ol>
<li>ForGroup(group, function functionHandle):GUI裡面對組做動作實際上在Jass中就是長這樣，會需要一個函數(function)去對組中的物件做操作，因為無法傳遞參數在操作函數中只能讀取到觸發器中事件響應物件，這造成一些資料讀取的困難但使用一些技巧還是可以克服的，這邊就使用unithandle將資料都存取在hashtable中，ForGroup時可以獲得unithandle讀取到我們想要的資料</li>
<li>DistanceBetweenPoints(loc1,loc2): 兩點間的距離，返回一個real</li>
<li>PolarProjectionBJ(loc, distance, angle): 極座標點位移，實用而且常用的函數，將點朝一個角度位移你要的距離</li>
</ol>
<h4 id="整段做的動作是每0-05秒將投射物單位朝目標點位移，期間計算拋物線高度到目標點後殺死目標並且加入到單位組中實現後續對範圍內目標傷害的機制，這整個系統難點都是資料不好傳遞內建的傷害範圍目標是不分敵我所以無法使用，必須用這種方式來實現"><a href="#整段做的動作是每0-05秒將投射物單位朝目標點位移，期間計算拋物線高度到目標點後殺死目標並且加入到單位組中實現後續對範圍內目標傷害的機制，這整個系統難點都是資料不好傳遞內建的傷害範圍目標是不分敵我所以無法使用，必須用這種方式來實現" class="headerlink" title="整段做的動作是每0.05秒將投射物單位朝目標點位移，期間計算拋物線高度到目標點後殺死目標並且加入到單位組中實現後續對範圍內目標傷害的機制，這整個系統難點都是資料不好傳遞內建的傷害範圍目標是不分敵我所以無法使用，必須用這種方式來實現"></a>整段做的動作是每0.05秒將投射物單位朝目標點位移，期間計算拋物線高度到目標點後殺死目標並且加入到單位組中實現後續對範圍內目標傷害的機制，這整個系統難點都是資料不好傳遞內建的傷害範圍目標是不分敵我所以無法使用，必須用這種方式來實現</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function MissilesLoc_add_group takes nothing returns nothing</span><br><span class="line">  local integer handleId = GetHandleId(Missiles_OnHitUnit)</span><br><span class="line">  local unit u = GetEnumUnit()</span><br><span class="line">  local unit attacker = LoadUnitHandle(Missiles_loc_table, handleId, 3)</span><br><span class="line">  local integer target_handleId = GetHandleId(u)</span><br><span class="line"></span><br><span class="line">  local real dmg = LoadReal(Missiles_loc_table, handleId, 1)</span><br><span class="line"></span><br><span class="line">  call GroupAddUnit(Missiles_Damage_Group, u)</span><br><span class="line">  call SaveUnitHandle(Missiles_Damage_table, target_handleId, 0, attacker)</span><br><span class="line">  call SaveReal(Missiles_Damage_table, target_handleId, 1, dmg)</span><br><span class="line">  </span><br><span class="line">  set u = null</span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function MissilesLoc_ForGroup takes nothing returns nothing</span><br><span class="line">  local unit u = GetEnumUnit()</span><br><span class="line">  local integer handleId = GetHandleId(u)</span><br><span class="line">  local location target = LoadLocationHandle(Missiles_loc_table, handleId, 2)</span><br><span class="line">  local location loc = GetUnitLoc(u)</span><br><span class="line">  local location startLoc = MissilesGetStartLoc(handleId)</span><br><span class="line">  local real angle = AngleBetweenPoints(loc, target)</span><br><span class="line">  local real distance = DistanceBetweenPoints(loc, target)</span><br><span class="line">  local real x = GetLocationX(loc)</span><br><span class="line">  local real y = GetLocationY(loc)</span><br><span class="line">  local real erac = LoadReal(Missiles_loc_table, handleId, 4)</span><br><span class="line">  local real radius = LoadReal(Missiles_loc_table, handleId, 5)</span><br><span class="line">  local real speed = LoadReal(Missiles_loc_table, handleId, 6)</span><br><span class="line"></span><br><span class="line">  local string effectName = LoadStr(Missiles_loc_table, handleId, 7)</span><br><span class="line">  //</span><br><span class="line">  local location nextLoc = PolarProjectionBJ(loc, speed / 20, angle)</span><br><span class="line"></span><br><span class="line">  local real hight = util_GetParabolaHeight(u, startLoc , target, erac)</span><br><span class="line">  local group g = null</span><br><span class="line"></span><br><span class="line">  local effect e = null</span><br><span class="line">  if IsUnitDeadBJ(u) == true then </span><br><span class="line">    call FlushChildHashtable(Missiles_loc_table, handleId)</span><br><span class="line">    call GroupRemoveUnit(Missiles_Unit_Group, u)</span><br><span class="line">    call RemoveLocation(target)</span><br><span class="line">  endif</span><br><span class="line">  if IsUnitInRangeLoc(u, target, 80) then</span><br><span class="line">    set g = GetUnitsInRangeOfLocMatching(radius, loc, Condition(function util_isEnemyfilter ))</span><br><span class="line">    set e = AddSpecialEffectLoc( effectName, loc)</span><br><span class="line">  </span><br><span class="line">    set Missiles_OnHitUnit = u</span><br><span class="line">    call ForGroup(g, function MissilesLoc_add_group )</span><br><span class="line"></span><br><span class="line">    //---------------------------------------------------------</span><br><span class="line">    call DestroyEffect(e)</span><br><span class="line">    call KillUnit(u)</span><br><span class="line">  else</span><br><span class="line">    call SetUnitPositionLocFacingBJ( u, nextLoc , bj_UNIT_FACING )</span><br><span class="line">  endif</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  call SetUnitPositionLocFacingBJ( u, nextLoc , bj_UNIT_FACING )</span><br><span class="line">  call SetUnitFlyHeight(u, hight  , 99999)</span><br><span class="line">  //=====================================================================</span><br><span class="line">  call RemoveLocation(loc)</span><br><span class="line">  call RemoveLocation(nextLoc)</span><br><span class="line">  call DestroyGroup(g)</span><br><span class="line">  set loc = null</span><br><span class="line">  set nextLoc = null</span><br><span class="line">  set g = null</span><br><span class="line">  set e = null</span><br><span class="line">  set u = null</span><br><span class="line">endfunction</span><br><span class="line">function Trig_MissilesLocActionActions takes nothing returns nothing</span><br><span class="line"> </span><br><span class="line">  call ForGroup(Missiles_Unit_Group, function MissilesLoc_ForGroup )</span><br><span class="line"></span><br><span class="line">endfunction </span><br><span class="line"></span><br><span class="line">//===========================================================================</span><br><span class="line">function InitTrig_MissilesLocAction takes nothing returns nothing</span><br><span class="line">  set gg_trg_MissilesLocAction = CreateTrigger()</span><br><span class="line"></span><br><span class="line">  call TriggerRegisterTimerEventPeriodic( gg_trg_MissilesLocAction, 0.05 )</span><br><span class="line">  call TriggerAddAction(gg_trg_MissilesLocAction, function Trig_MissilesLocActionActions)</span><br><span class="line">endfunction</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>WE</tag>
        <tag>JASS</tag>
      </tags>
  </entry>
  <entry>
    <title>測量程式碼區塊執行時間</title>
    <url>/2023/05/29/%E6%B8%AC%E9%87%8F%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%8D%80%E5%A1%8A%E5%9F%B7%E8%A1%8C%E6%99%82%E9%96%93/</url>
    <content><![CDATA[<h1 id="使用-System-Diagnostics"><a href="#使用-System-Diagnostics" class="headerlink" title="使用 System.Diagnostics"></a>使用 System.Diagnostics</h1><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">Stopwatch stopWatch = Stopwatch.StartNew();</span><br><span class="line"><span class="comment">/*要測試的區塊放這*/</span></span><br><span class="line">stopWatch.Stop();</span><br><span class="line">Trace.WriteLine(<span class="string">&quot;使用時間: &quot;</span>+ stopWatch.ElapsedMilliseconds);</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>重拾ReactNative(一)</title>
    <url>/2023/07/14/%E9%87%8D%E6%8B%BEReactNative-1/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近主管終於放棄 Xamarin 改使用 ReactNative 開發 APP，作為提出建議的人這個任務最後也落到我頭上來了，記憶中最後一次使用 RN 已經是三年多前的事情了很多東西都不同了，於是只好在開發的過程中慢慢重新學習 ReactNative 還有其他的套件</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p>經過思考過後決定使用 expo，原因如下:</p>
<ul>
<li>簡化開發流程</li>
<li>避免不必要的問題</li>
<li>速度還有方便性</li>
</ul>
<p>其餘主要使用的套件有:</p>
<ul>
<li>React Navigation</li>
<li>Redux</li>
<li>React Native Paper</li>
<li>React Native Render HTML</li>
<li>React Native Vector Icon</li>
</ul>
<p>另外為了避免 JavaScript 各種神奇的問題，還有挑戰自我這次使用 TypeScript 做為開發語言</p>
<h1 id="過程中遇到的各種問題"><a href="#過程中遇到的各種問題" class="headerlink" title="過程中遇到的各種問題"></a>過程中遇到的各種問題</h1><h3 id="TypeScript-型別"><a href="#TypeScript-型別" class="headerlink" title="TypeScript 型別"></a>TypeScript 型別</h3><p>TypeScript 作為 JavaScript 的超集提供了原本沒有的型別檢查功能，剛開始使用的時候在寫第一個 Component 的時候直接撞牆，這是一個類組建在 JavaScript 中是沒有問題的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">App</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line">  <span class="title function_">constrostor</span>(<span class="params">props</span>) &#123;&#125;</span><br><span class="line">  <span class="attr">state</span>: <span class="title class_">MyState</span> = &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;this.props.message&#125; &#123;this.state.count&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是在 TypeScript 中還要先定義他的參數、State 的型別不然 Ts 會報錯</p>
<h3 id="Redux-Toolkit"><a href="#Redux-Toolkit" class="headerlink" title="Redux Toolkit"></a>Redux Toolkit</h3><p>需要一個東西來管理全域都會使用到的資料比如使用者資訊，有考慮過三種方法</p>
<ol>
<li>使用global</li>
<li>RN的Context</li>
<li>Redux</li>
</ol>
<p>第一種感覺不是很好，畢竟資料一多一定會導致載入時間便很長而且難以維護，Context API 因為一開始都是用 Class Component寫的所以沒使用，第三種Redux 就是設定有點麻煩但是最後還是選他，但這次想試試看新的Redux toolkit</p>
<h4 id="Redux-Toolkit-1"><a href="#Redux-Toolkit-1" class="headerlink" title="Redux Toolkit"></a>Redux Toolkit</h4><blockquote>
<p>Redux <strong>Toolkit</strong>包旨在成為編寫<a href="https://redux.js.org/">Redux</a>邏輯的標準方法。它最初是為了幫助解決有關 Redux 的三個常見問題而創建的：</p>
<ul>
<li>“配置 Redux 存儲太複雜”</li>
<li>“我必須添加很多包才能讓 Redux 做任何有用的事情”</li>
<li>“Redux 需要太多樣板代碼”</li>
</ul>
<p>我們無法解決每個用例，但我們可以嘗試提供一些工具來抽象設置過程並處理最常見的用例，並包含一些有用的實用程序，讓用戶簡化他們的操作應用程序代碼。</p>
</blockquote>
<p>幾年前用Redux最大的問題就是有很多的配置還有套件要一起手動裝上 裝完Redux核心還要裝上Saga 、thunk… 裝完眼也花了還發現沒成功又要繼續翻文件 雖然最後還是弄好了但是安裝的使用體驗實在是很不好，官方並沒有提供如同<a href="https://github.com/facebook/create-react-app"><code>create-react-app</code></a> 這種一鍵安裝、開箱即用的工具，Redux Toolkit的出現解決了這三種問題讓配置過程簡單快速大大的減少使用上的挫敗感，而且 reducer action 也簡化成一個個slice 讓程式看起來更簡潔，缺點就是官方並沒有在文件說明怎麼跟Class component一起使用，網路上是說可以用connect但我是用 function component 將類組件包起來後將資料傳遞過去解決</p>
]]></content>
      <tags>
        <tag>ReactNative</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 189</title>
    <url>/2023/06/30/leetcode-189/</url>
    <content><![CDATA[<h1 id="施工中…"><a href="#施工中…" class="headerlink" title="施工中…"></a>施工中…</h1>]]></content>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>如何該改dbml連線字串</title>
    <url>/2023/06/29/%E5%A6%82%E4%BD%95%E8%A9%B2%E6%94%B9dbml%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2/</url>
    <content><![CDATA[<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><p>之前更改dbml的連線字串都是先新增連接到資料庫在拖曳資料表進設計檔中，讓vs自動該改連線字串到新的資料庫，或者更改app.config的連線字串</p>
<p>但是這兩種方法在把dbml放在單獨的組件中時不起作用，每次重建時都會重製回更改前也無法拖曳資料表到dbml中，於是仔細研究Visual Studio究竟是去哪抓連線字串還有事怎麼新增連線字串的</p>
<h1 id="更改方法"><a href="#更改方法" class="headerlink" title="更改方法"></a>更改方法</h1><p>Visual Studio將連線字串放置在組件中Properties底下的Settings.settings中</p>
<p>如要更改連線字串首先打開Settings.settings會出現表格文件</p>
<img src="/2023/06/29/%E5%A6%82%E4%BD%95%E8%A9%B2%E6%94%B9dbml%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2/dbmlChangeConnection.png" class="">

<p>這個文件可以添加應用程式屬性和其他資訊，點選最下方欄位或又見可以新增設定</p>
<p>類型選擇連接字串，若是有其他已經在使用的連接字串請更改使用中的連接字串，VS只會只用當前連接字串會忽視後來新增的，除非有檢測到當前資料表跟資料來源不同才會切換。</p>
<p>點選 ‘值’欄位最後方會出現編輯選項按鈕點開會出現連接屬性</p>
<img src="/2023/06/29/%E5%A6%82%E4%BD%95%E8%A9%B2%E6%94%B9dbml%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2/dbmlSetting.png" class="">

<p>填寫完資料庫伺服器資訊後測試連接成功案確定即可新增&#x2F;該改連接字串。</p>
<p>修改完後記得重建組件重啟應用程式</p>
]]></content>
      <tags>
        <tag>Asp.Net</tag>
      </tags>
  </entry>
  <entry>
    <title>xamarin學習筆記</title>
    <url>/2023/06/17/xamarin%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h1 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h1><h3 id="因應公司有項目要使用-Xamarin-開發要做準備"><a href="#因應公司有項目要使用-Xamarin-開發要做準備" class="headerlink" title="因應公司有項目要使用 Xamarin 開發要做準備"></a>因應公司有項目要使用 Xamarin 開發要做準備</h3><h1 id="Xamarin-根元素屬性"><a href="#Xamarin-根元素屬性" class="headerlink" title="Xamarin 根元素屬性"></a>Xamarin 根元素屬性</h1><h2 id="命名空間-xmlns"><a href="#命名空間-xmlns" class="headerlink" title="命名空間 xmlns"></a>命名空間 xmlns</h2><h3 id="根據官方文件說明"><a href="#根據官方文件說明" class="headerlink" title="根據官方文件說明"></a>根據官方文件說明</h3><blockquote>
<p><em>XAML 使用 xmlns XML 屬性進行命名空間聲明。本文介紹 XAML 命名空間語法，並演示如何聲明 XAML 命名空間以訪問類型。</em></p>
</blockquote>
<h3 id="格式如下"><a href="#格式如下" class="headerlink" title="格式如下"></a>格式如下</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">xmlns:&#123;XML namespace name&#125;=&quot;clr-namespace:&#123;.NET namespace&#125;&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Shell</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xamarin.com/schemas/2014/forms&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:views</span> =<span class="string">&quot;clr-namespace:Test01&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:local</span> =<span class="string">&quot;clr-namespace:Test01.View&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">x:Class</span>=<span class="string">&quot;Test01.MainShell&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">Title</span>=<span class="string">&quot;APP&quot;</span></span></span><br><span class="line"><span class="tag">       &gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">xmlns=<span class="string">&quot;http://xamarin.com/schemas/2014/forms&quot;</span></span><br><span class="line"><span class="comment">//第一個命名空間 將整個XAML命名空間應設為默認命名空間</span></span><br><span class="line"><span class="comment">//WPF程序集會將比如System.Windows System.Windows.Controls映射到這類命名空間</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xmlns:x=&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span><br><span class="line"> //第二個命名空間會用xmlns:x ，將映射單獨的命名空間至x:前墜</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xmlns:views =&quot;clr-namespace:Test01&quot; //映射到自定義類和程序集views</span><br><span class="line">//clr-namespace:在程序集中聲明的 CLR 命名空間，其中包含要公開為元素的公共類型。</span><br></pre></td></tr></table></figure>

<h3 id="自訂命名空間-SDKSample"><a href="#自訂命名空間-SDKSample" class="headerlink" title="自訂命名空間 SDKSample"></a>自訂命名空間 SDKSample</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">SDKSample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ExampleClass</span> : <span class="title">ContentControl</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ExampleClass</span>()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="在跟標記中使用帶前綴的引用-xmlns-custom-使-ExampleClass-在-UI-中進行實例化"><a href="#在跟標記中使用帶前綴的引用-xmlns-custom-使-ExampleClass-在-UI-中進行實例化" class="headerlink" title="在跟標記中使用帶前綴的引用 xmlns:custom 使 ExampleClass 在 UI 中進行實例化"></a>在跟標記中使用帶前綴的引用 xmlns:custom 使 ExampleClass 在 UI 中進行實例化</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Page</span> <span class="attr">x:Class</span>=<span class="string">&quot;WPFApplication1.MainPage&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:custom</span>=<span class="string">&quot;clr-namespace:SDKSample;assembly=SDKSampleLibrary&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">custom:ExampleClass</span>/&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="映射到當前程序集"><a href="#映射到當前程序集" class="headerlink" title="映射到當前程序集"></a>映射到當前程序集</h3><p><code>assemblyclr-namespace</code>如果引用的對像是在與引用自定義類的應用程序代碼相同的程序集中定義的，則可以省略。或者，這種情況的等效語法是指定<code>assembly=</code>，等號後面沒有字符串標記。</p>
<p>如果在同一程序集中定義自定義類，則不能將其用作頁面的根元素。部分類不需要映射；如果您打算在 XAML 中將它們引用為元素，則僅需要映射應用程序中頁面的分部類以外的類。</p>
<h1 id="Shell-應用程式"><a href="#Shell-應用程式" class="headerlink" title="Shell 應用程式"></a>Shell 應用程式</h1><p>在 Xamarin 4.0 中新增的功能不同於一般的 Page, Shell 是一種基於 URI 的導航方式本身的功能只負責導航，大部分應用程式常見的導航方式都可以使用 Shell 實現，要使用必須在 App.cs 中將首頁設為 Shell 頁面</p>
<h2 id="繼承-Shell-的子類"><a href="#繼承-Shell-的子類" class="headerlink" title="繼承 Shell 的子類"></a>繼承 Shell 的子類</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainShell</span> : <span class="title">Shell</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainShell</span>()</span>&#123;</span><br><span class="line">           InitializeComponent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Xaml"><a href="#Xaml" class="headerlink" title="Xaml"></a>Xaml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Shell</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xamarin.com/schemas/2014/forms&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">x:Class</span>=<span class="string">&quot;MyApp.AppShell&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!---控件放這---&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Shell</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="App-設定入口頁面"><a href="#App-設定入口頁面" class="headerlink" title="App 設定入口頁面"></a>App 設定入口頁面</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">Application</span>&#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">App</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            MainPage = <span class="keyword">new</span> MainShell();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="導航版面設計"><a href="#導航版面設計" class="headerlink" title="導航版面設計"></a>導航版面設計</h2><h4 id="Shell-的子控件分為三大類"><a href="#Shell-的子控件分為三大類" class="headerlink" title="Shell 的子控件分為三大類"></a>Shell 的子控件分為三大類</h4><ol>
<li>TabBar 或 FlyoutItem: 底部標籤，側邊手風琴彈出視窗，兩者同時只能使用一個若是出現在同一個 Shell 會使用最上面那個為主另一個不顯示</li>
<li>Tab:用來幫 ShellContent 分組</li>
<li>ShellContent:每個導航選項卡的頁面，如果 Tab 外出現多個 ShellContent 則會出現在底部標籤列</li>
</ol>
<h4 id="FlyoutItem-屬性"><a href="#FlyoutItem-屬性" class="headerlink" title="FlyoutItem 屬性"></a>FlyoutItem 屬性</h4><p>FlyoutDisplayOptions:設定有多少控件在 FlyoutItem 中時將標籤移至手風情選單中，莫認為 AsSingleItem</p>
<h4 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h4><h5 id="以下-xaml-手風琴選單中會有"><a href="#以下-xaml-手風琴選單中會有" class="headerlink" title="以下 xaml 手風琴選單中會有"></a>以下 xaml 手風琴選單中會有</h5><ol>
<li>首頁</li>
<li>我的帳戶</li>
<li>登入</li>
</ol>
<h5 id="首頁中會有三個子頁面導航標籤"><a href="#首頁中會有三個子頁面導航標籤" class="headerlink" title="首頁中會有三個子頁面導航標籤"></a>首頁中會有三個子頁面導航標籤</h5><ol>
<li>專欄文章</li>
<li>熱門文章</li>
<li>全球焦點</li>
</ol>
<h5 id="其他-Tab-以此類推"><a href="#其他-Tab-以此類推" class="headerlink" title="其他 Tab 以此類推"></a>其他 Tab 以此類推</h5><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">&lt;Shell xmlns=<span class="string">&quot;http://xamarin.com/schemas/2014/forms&quot;</span></span><br><span class="line">       xmlns:x=<span class="string">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span><br><span class="line">       x:Class=<span class="string">&quot;MyApp.AppShell&quot;</span>&gt;</span><br><span class="line">   &lt;FlyoutItem Title=<span class="string">&quot;首頁&quot;</span>&gt;</span><br><span class="line">        &lt;Tab Title=<span class="string">&quot;首頁&quot;</span>&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;專欄文章&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:FrontPage&#125;&quot;</span> /&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;熱門文章&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:MessageList&#125;&quot;</span> /&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;全球焦點&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:Login&#125;&quot;</span> /&gt;</span><br><span class="line">        &lt;/Tab&gt;</span><br><span class="line">        &lt;Tab Title=<span class="string">&quot;財富管理&quot;</span>&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;全權委託&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:FrontPage&#125;&quot;</span> /&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;AI人工智慧財&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:Login&#125;&quot;</span> /&gt;</span><br><span class="line">        &lt;/Tab&gt;</span><br><span class="line">        &lt;Tab Title=<span class="string">&quot;關於我們&quot;</span>&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;公司簡介&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:FrontPage&#125;&quot;</span> /&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;經營理念&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:Login&#125;&quot;</span> /&gt;</span><br><span class="line">            &lt;ShellContent Title=<span class="string">&quot;服務項目&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:Login&#125;&quot;</span> /&gt;</span><br><span class="line">        &lt;/Tab&gt;</span><br><span class="line">    &lt;/FlyoutItem&gt;</span><br><span class="line">    &lt;FlyoutItem  FlyoutDisplayOptions=<span class="string">&quot;AsMultipleItems&quot;</span>&gt;</span><br><span class="line">        &lt;ShellContent Title=<span class="string">&quot;我的帳戶&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:FrontPage&#125;&quot;</span> /&gt;</span><br><span class="line">        &lt;ShellContent Title=<span class="string">&quot;登入&quot;</span> ContentTemplate=<span class="string">&quot;&#123;DataTemplate views:Login&#125;&quot;</span> /&gt;</span><br><span class="line">    &lt;/FlyoutItem&gt;</span><br><span class="line">&lt;/Shell&gt;</span><br></pre></td></tr></table></figure>

<h1 id="Application-Resources"><a href="#Application-Resources" class="headerlink" title="Application.Resources"></a>Application.Resources</h1><h3 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Application</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xamarin.com/schemas/2014/forms&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">x:Class</span>=<span class="string">&quot;Test01.App&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Application.Resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Application</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="說明-1"><a href="#說明-1" class="headerlink" title="說明"></a>說明</h3><p>結果發現Xamarin From也是即將在2024停止維護，後續會被MAUI(Multi-platform App UI)取代因此將開新的一篇直接學習MAUI</p>
]]></content>
      <tags>
        <tag>C#</tag>
        <tag>xamarin</tag>
        <tag>.Net</tag>
      </tags>
  </entry>
</search>
